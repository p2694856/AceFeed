generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(cuid())
  name             String?
  email            String            @unique
  password         String
  posts            Post[]
  userTopics       UserTopic[]
  proxyAssignments ProxyAssignment[] // ‚Üê add this
}

model Topic {
  id         String      @id @default(cuid())
  name       String      @unique
  userTopics UserTopic[]
  posts      Post[]
}

model UserTopic {
  id      String @id @default(cuid())
  userId  String
  topicId String
  topic   Topic  @relation(fields: [topicId], references: [id])
  user    User   @relation(fields: [userId], references: [id])

  @@unique([userId, topicId])
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String?
  author    User?    @relation(fields: [authorId], references: [id])
  imageUrl  String
  topicId   String
  topic     Topic    @relation(fields: [topicId], references: [id])
}

model ProxyAccount {
  id           Int      @id @default(autoincrement())
  fbPageId     String   @unique
  igBusinessId String?
  accessToken  String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  assignments ProxyAssignment[] // back-relation
}

model ProxyAssignment {
  id      String @id @default(cuid())
  userId  String
  proxyId Int

  user  User         @relation(fields: [userId], references: [id])
  proxy ProxyAccount @relation(fields: [proxyId], references: [id])

  @@unique([userId, proxyId])
}
