import { Lexicons } from '@atproto/lexicon';
export { AtUri } from '@atproto/syntax';
export { BlobRef, jsonStringToLex, jsonToLex, lexToJson, stringifyLex, } from '@atproto/lexicon';
export { parseLanguage } from '@atproto/common-web';
export * from '@atproto/api/dist/types';
export * from '@atproto/api/dist/const';
export * from '@atproto/api/dist/util';
export * from '@atproto/api/dist/client';
export { schemas } from '@atproto/api/dist/client/lexicons';
export type { $Typed, Un$Typed } from '@atproto/api/dist/client/util';
export { asPredicate } from '@atproto/api/dist/client/util';
export * from '@atproto/api/dist/rich-text/rich-text';
export * from '@atproto/api/dist/rich-text/sanitization';
export * from '@atproto/api/dist/rich-text/unicode';
export * from '@atproto/api/dist/rich-text/util';
export * from '@atproto/api/dist/moderation';
export * from '@atproto/api/dist/moderation/types';
export * from '@atproto/api/dist/mocker';
export { DEFAULT_LABEL_SETTINGS, LABELS } from '@atproto/api/dist/moderation/const/labels';
export { Agent } from '@atproto/api/dist/agent';
export { AtpAgent, type AtpAgentOptions } from '@atproto/api/dist/atp-agent';
export { CredentialSession } from '@atproto/api/dist/atp-agent';
export { BskyAgent } from '@atproto/api/dist/bsky-agent';
export { 
/** @deprecated */
AtpAgent as default, } from '@atproto/api/dist/atp-agent';
export declare const lexicons: Lexicons;
//# sourceMappingURL=index.d.ts.map