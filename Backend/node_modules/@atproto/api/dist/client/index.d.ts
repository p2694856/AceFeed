/**
 * GENERATED CODE - DO NOT MODIFY
 */
import { XrpcClient, type FetchHandler, type FetchHandlerOptions } from '@atproto/xrpc';
import { type OmitKey, type Un$Typed } from '@atproto/api/dist/client/util.js';
import * as ComAtprotoAdminDeleteAccount from '@atproto/api/dist/client/types/com/atproto/admin/deleteAccount.js';
import * as ComAtprotoAdminDisableAccountInvites from '@atproto/api/dist/client/types/com/atproto/admin/disableAccountInvites.js';
import * as ComAtprotoAdminDisableInviteCodes from '@atproto/api/dist/client/types/com/atproto/admin/disableInviteCodes.js';
import * as ComAtprotoAdminEnableAccountInvites from '@atproto/api/dist/client/types/com/atproto/admin/enableAccountInvites.js';
import * as ComAtprotoAdminGetAccountInfo from '@atproto/api/dist/client/types/com/atproto/admin/getAccountInfo.js';
import * as ComAtprotoAdminGetAccountInfos from '@atproto/api/dist/client/types/com/atproto/admin/getAccountInfos.js';
import * as ComAtprotoAdminGetInviteCodes from '@atproto/api/dist/client/types/com/atproto/admin/getInviteCodes.js';
import * as ComAtprotoAdminGetSubjectStatus from '@atproto/api/dist/client/types/com/atproto/admin/getSubjectStatus.js';
import * as ComAtprotoAdminSearchAccounts from '@atproto/api/dist/client/types/com/atproto/admin/searchAccounts.js';
import * as ComAtprotoAdminSendEmail from '@atproto/api/dist/client/types/com/atproto/admin/sendEmail.js';
import * as ComAtprotoAdminUpdateAccountEmail from '@atproto/api/dist/client/types/com/atproto/admin/updateAccountEmail.js';
import * as ComAtprotoAdminUpdateAccountHandle from '@atproto/api/dist/client/types/com/atproto/admin/updateAccountHandle.js';
import * as ComAtprotoAdminUpdateAccountPassword from '@atproto/api/dist/client/types/com/atproto/admin/updateAccountPassword.js';
import * as ComAtprotoAdminUpdateAccountSigningKey from '@atproto/api/dist/client/types/com/atproto/admin/updateAccountSigningKey.js';
import * as ComAtprotoAdminUpdateSubjectStatus from '@atproto/api/dist/client/types/com/atproto/admin/updateSubjectStatus.js';
import * as ComAtprotoIdentityGetRecommendedDidCredentials from '@atproto/api/dist/client/types/com/atproto/identity/getRecommendedDidCredentials.js';
import * as ComAtprotoIdentityRefreshIdentity from '@atproto/api/dist/client/types/com/atproto/identity/refreshIdentity.js';
import * as ComAtprotoIdentityRequestPlcOperationSignature from '@atproto/api/dist/client/types/com/atproto/identity/requestPlcOperationSignature.js';
import * as ComAtprotoIdentityResolveDid from '@atproto/api/dist/client/types/com/atproto/identity/resolveDid.js';
import * as ComAtprotoIdentityResolveHandle from '@atproto/api/dist/client/types/com/atproto/identity/resolveHandle.js';
import * as ComAtprotoIdentityResolveIdentity from '@atproto/api/dist/client/types/com/atproto/identity/resolveIdentity.js';
import * as ComAtprotoIdentitySignPlcOperation from '@atproto/api/dist/client/types/com/atproto/identity/signPlcOperation.js';
import * as ComAtprotoIdentitySubmitPlcOperation from '@atproto/api/dist/client/types/com/atproto/identity/submitPlcOperation.js';
import * as ComAtprotoIdentityUpdateHandle from '@atproto/api/dist/client/types/com/atproto/identity/updateHandle.js';
import * as ComAtprotoLabelQueryLabels from '@atproto/api/dist/client/types/com/atproto/label/queryLabels.js';
import * as ComAtprotoLexiconSchema from '@atproto/api/dist/client/types/com/atproto/lexicon/schema.js';
import * as ComAtprotoModerationCreateReport from '@atproto/api/dist/client/types/com/atproto/moderation/createReport.js';
import * as ComAtprotoRepoApplyWrites from '@atproto/api/dist/client/types/com/atproto/repo/applyWrites.js';
import * as ComAtprotoRepoCreateRecord from '@atproto/api/dist/client/types/com/atproto/repo/createRecord.js';
import * as ComAtprotoRepoDeleteRecord from '@atproto/api/dist/client/types/com/atproto/repo/deleteRecord.js';
import * as ComAtprotoRepoDescribeRepo from '@atproto/api/dist/client/types/com/atproto/repo/describeRepo.js';
import * as ComAtprotoRepoGetRecord from '@atproto/api/dist/client/types/com/atproto/repo/getRecord.js';
import * as ComAtprotoRepoImportRepo from '@atproto/api/dist/client/types/com/atproto/repo/importRepo.js';
import * as ComAtprotoRepoListMissingBlobs from '@atproto/api/dist/client/types/com/atproto/repo/listMissingBlobs.js';
import * as ComAtprotoRepoListRecords from '@atproto/api/dist/client/types/com/atproto/repo/listRecords.js';
import * as ComAtprotoRepoPutRecord from '@atproto/api/dist/client/types/com/atproto/repo/putRecord.js';
import * as ComAtprotoRepoUploadBlob from '@atproto/api/dist/client/types/com/atproto/repo/uploadBlob.js';
import * as ComAtprotoServerActivateAccount from '@atproto/api/dist/client/types/com/atproto/server/activateAccount.js';
import * as ComAtprotoServerCheckAccountStatus from '@atproto/api/dist/client/types/com/atproto/server/checkAccountStatus.js';
import * as ComAtprotoServerConfirmEmail from '@atproto/api/dist/client/types/com/atproto/server/confirmEmail.js';
import * as ComAtprotoServerCreateAccount from '@atproto/api/dist/client/types/com/atproto/server/createAccount.js';
import * as ComAtprotoServerCreateAppPassword from '@atproto/api/dist/client/types/com/atproto/server/createAppPassword.js';
import * as ComAtprotoServerCreateInviteCode from '@atproto/api/dist/client/types/com/atproto/server/createInviteCode.js';
import * as ComAtprotoServerCreateInviteCodes from '@atproto/api/dist/client/types/com/atproto/server/createInviteCodes.js';
import * as ComAtprotoServerCreateSession from '@atproto/api/dist/client/types/com/atproto/server/createSession.js';
import * as ComAtprotoServerDeactivateAccount from '@atproto/api/dist/client/types/com/atproto/server/deactivateAccount.js';
import * as ComAtprotoServerDeleteAccount from '@atproto/api/dist/client/types/com/atproto/server/deleteAccount.js';
import * as ComAtprotoServerDeleteSession from '@atproto/api/dist/client/types/com/atproto/server/deleteSession.js';
import * as ComAtprotoServerDescribeServer from '@atproto/api/dist/client/types/com/atproto/server/describeServer.js';
import * as ComAtprotoServerGetAccountInviteCodes from '@atproto/api/dist/client/types/com/atproto/server/getAccountInviteCodes.js';
import * as ComAtprotoServerGetServiceAuth from '@atproto/api/dist/client/types/com/atproto/server/getServiceAuth.js';
import * as ComAtprotoServerGetSession from '@atproto/api/dist/client/types/com/atproto/server/getSession.js';
import * as ComAtprotoServerListAppPasswords from '@atproto/api/dist/client/types/com/atproto/server/listAppPasswords.js';
import * as ComAtprotoServerRefreshSession from '@atproto/api/dist/client/types/com/atproto/server/refreshSession.js';
import * as ComAtprotoServerRequestAccountDelete from '@atproto/api/dist/client/types/com/atproto/server/requestAccountDelete.js';
import * as ComAtprotoServerRequestEmailConfirmation from '@atproto/api/dist/client/types/com/atproto/server/requestEmailConfirmation.js';
import * as ComAtprotoServerRequestEmailUpdate from '@atproto/api/dist/client/types/com/atproto/server/requestEmailUpdate.js';
import * as ComAtprotoServerRequestPasswordReset from '@atproto/api/dist/client/types/com/atproto/server/requestPasswordReset.js';
import * as ComAtprotoServerReserveSigningKey from '@atproto/api/dist/client/types/com/atproto/server/reserveSigningKey.js';
import * as ComAtprotoServerResetPassword from '@atproto/api/dist/client/types/com/atproto/server/resetPassword.js';
import * as ComAtprotoServerRevokeAppPassword from '@atproto/api/dist/client/types/com/atproto/server/revokeAppPassword.js';
import * as ComAtprotoServerUpdateEmail from '@atproto/api/dist/client/types/com/atproto/server/updateEmail.js';
import * as ComAtprotoSyncGetBlob from '@atproto/api/dist/client/types/com/atproto/sync/getBlob.js';
import * as ComAtprotoSyncGetBlocks from '@atproto/api/dist/client/types/com/atproto/sync/getBlocks.js';
import * as ComAtprotoSyncGetCheckout from '@atproto/api/dist/client/types/com/atproto/sync/getCheckout.js';
import * as ComAtprotoSyncGetHead from '@atproto/api/dist/client/types/com/atproto/sync/getHead.js';
import * as ComAtprotoSyncGetHostStatus from '@atproto/api/dist/client/types/com/atproto/sync/getHostStatus.js';
import * as ComAtprotoSyncGetLatestCommit from '@atproto/api/dist/client/types/com/atproto/sync/getLatestCommit.js';
import * as ComAtprotoSyncGetRecord from '@atproto/api/dist/client/types/com/atproto/sync/getRecord.js';
import * as ComAtprotoSyncGetRepo from '@atproto/api/dist/client/types/com/atproto/sync/getRepo.js';
import * as ComAtprotoSyncGetRepoStatus from '@atproto/api/dist/client/types/com/atproto/sync/getRepoStatus.js';
import * as ComAtprotoSyncListBlobs from '@atproto/api/dist/client/types/com/atproto/sync/listBlobs.js';
import * as ComAtprotoSyncListHosts from '@atproto/api/dist/client/types/com/atproto/sync/listHosts.js';
import * as ComAtprotoSyncListRepos from '@atproto/api/dist/client/types/com/atproto/sync/listRepos.js';
import * as ComAtprotoSyncListReposByCollection from '@atproto/api/dist/client/types/com/atproto/sync/listReposByCollection.js';
import * as ComAtprotoSyncNotifyOfUpdate from '@atproto/api/dist/client/types/com/atproto/sync/notifyOfUpdate.js';
import * as ComAtprotoSyncRequestCrawl from '@atproto/api/dist/client/types/com/atproto/sync/requestCrawl.js';
import * as ComAtprotoTempAddReservedHandle from '@atproto/api/dist/client/types/com/atproto/temp/addReservedHandle.js';
import * as ComAtprotoTempCheckSignupQueue from '@atproto/api/dist/client/types/com/atproto/temp/checkSignupQueue.js';
import * as ComAtprotoTempFetchLabels from '@atproto/api/dist/client/types/com/atproto/temp/fetchLabels.js';
import * as ComAtprotoTempRequestPhoneVerification from '@atproto/api/dist/client/types/com/atproto/temp/requestPhoneVerification.js';
import * as AppBskyActorGetPreferences from '@atproto/api/dist/client/types/app/bsky/actor/getPreferences.js';
import * as AppBskyActorGetProfile from '@atproto/api/dist/client/types/app/bsky/actor/getProfile.js';
import * as AppBskyActorGetProfiles from '@atproto/api/dist/client/types/app/bsky/actor/getProfiles.js';
import * as AppBskyActorGetSuggestions from '@atproto/api/dist/client/types/app/bsky/actor/getSuggestions.js';
import * as AppBskyActorProfile from '@atproto/api/dist/client/types/app/bsky/actor/profile.js';
import * as AppBskyActorPutPreferences from '@atproto/api/dist/client/types/app/bsky/actor/putPreferences.js';
import * as AppBskyActorSearchActors from '@atproto/api/dist/client/types/app/bsky/actor/searchActors.js';
import * as AppBskyActorSearchActorsTypeahead from '@atproto/api/dist/client/types/app/bsky/actor/searchActorsTypeahead.js';
import * as AppBskyActorStatus from '@atproto/api/dist/client/types/app/bsky/actor/status.js';
import * as AppBskyFeedDescribeFeedGenerator from '@atproto/api/dist/client/types/app/bsky/feed/describeFeedGenerator.js';
import * as AppBskyFeedGenerator from '@atproto/api/dist/client/types/app/bsky/feed/generator.js';
import * as AppBskyFeedGetActorFeeds from '@atproto/api/dist/client/types/app/bsky/feed/getActorFeeds.js';
import * as AppBskyFeedGetActorLikes from '@atproto/api/dist/client/types/app/bsky/feed/getActorLikes.js';
import * as AppBskyFeedGetAuthorFeed from '@atproto/api/dist/client/types/app/bsky/feed/getAuthorFeed.js';
import * as AppBskyFeedGetFeed from '@atproto/api/dist/client/types/app/bsky/feed/getFeed.js';
import * as AppBskyFeedGetFeedGenerator from '@atproto/api/dist/client/types/app/bsky/feed/getFeedGenerator.js';
import * as AppBskyFeedGetFeedGenerators from '@atproto/api/dist/client/types/app/bsky/feed/getFeedGenerators.js';
import * as AppBskyFeedGetFeedSkeleton from '@atproto/api/dist/client/types/app/bsky/feed/getFeedSkeleton.js';
import * as AppBskyFeedGetLikes from '@atproto/api/dist/client/types/app/bsky/feed/getLikes.js';
import * as AppBskyFeedGetListFeed from '@atproto/api/dist/client/types/app/bsky/feed/getListFeed.js';
import * as AppBskyFeedGetPostThread from '@atproto/api/dist/client/types/app/bsky/feed/getPostThread.js';
import * as AppBskyFeedGetPosts from '@atproto/api/dist/client/types/app/bsky/feed/getPosts.js';
import * as AppBskyFeedGetQuotes from '@atproto/api/dist/client/types/app/bsky/feed/getQuotes.js';
import * as AppBskyFeedGetRepostedBy from '@atproto/api/dist/client/types/app/bsky/feed/getRepostedBy.js';
import * as AppBskyFeedGetSuggestedFeeds from '@atproto/api/dist/client/types/app/bsky/feed/getSuggestedFeeds.js';
import * as AppBskyFeedGetTimeline from '@atproto/api/dist/client/types/app/bsky/feed/getTimeline.js';
import * as AppBskyFeedLike from '@atproto/api/dist/client/types/app/bsky/feed/like.js';
import * as AppBskyFeedPost from '@atproto/api/dist/client/types/app/bsky/feed/post.js';
import * as AppBskyFeedPostgate from '@atproto/api/dist/client/types/app/bsky/feed/postgate.js';
import * as AppBskyFeedRepost from '@atproto/api/dist/client/types/app/bsky/feed/repost.js';
import * as AppBskyFeedSearchPosts from '@atproto/api/dist/client/types/app/bsky/feed/searchPosts.js';
import * as AppBskyFeedSendInteractions from '@atproto/api/dist/client/types/app/bsky/feed/sendInteractions.js';
import * as AppBskyFeedThreadgate from '@atproto/api/dist/client/types/app/bsky/feed/threadgate.js';
import * as AppBskyGraphBlock from '@atproto/api/dist/client/types/app/bsky/graph/block.js';
import * as AppBskyGraphFollow from '@atproto/api/dist/client/types/app/bsky/graph/follow.js';
import * as AppBskyGraphGetActorStarterPacks from '@atproto/api/dist/client/types/app/bsky/graph/getActorStarterPacks.js';
import * as AppBskyGraphGetBlocks from '@atproto/api/dist/client/types/app/bsky/graph/getBlocks.js';
import * as AppBskyGraphGetFollowers from '@atproto/api/dist/client/types/app/bsky/graph/getFollowers.js';
import * as AppBskyGraphGetFollows from '@atproto/api/dist/client/types/app/bsky/graph/getFollows.js';
import * as AppBskyGraphGetKnownFollowers from '@atproto/api/dist/client/types/app/bsky/graph/getKnownFollowers.js';
import * as AppBskyGraphGetList from '@atproto/api/dist/client/types/app/bsky/graph/getList.js';
import * as AppBskyGraphGetListBlocks from '@atproto/api/dist/client/types/app/bsky/graph/getListBlocks.js';
import * as AppBskyGraphGetListMutes from '@atproto/api/dist/client/types/app/bsky/graph/getListMutes.js';
import * as AppBskyGraphGetLists from '@atproto/api/dist/client/types/app/bsky/graph/getLists.js';
import * as AppBskyGraphGetMutes from '@atproto/api/dist/client/types/app/bsky/graph/getMutes.js';
import * as AppBskyGraphGetRelationships from '@atproto/api/dist/client/types/app/bsky/graph/getRelationships.js';
import * as AppBskyGraphGetStarterPack from '@atproto/api/dist/client/types/app/bsky/graph/getStarterPack.js';
import * as AppBskyGraphGetStarterPacks from '@atproto/api/dist/client/types/app/bsky/graph/getStarterPacks.js';
import * as AppBskyGraphGetSuggestedFollowsByActor from '@atproto/api/dist/client/types/app/bsky/graph/getSuggestedFollowsByActor.js';
import * as AppBskyGraphList from '@atproto/api/dist/client/types/app/bsky/graph/list.js';
import * as AppBskyGraphListblock from '@atproto/api/dist/client/types/app/bsky/graph/listblock.js';
import * as AppBskyGraphListitem from '@atproto/api/dist/client/types/app/bsky/graph/listitem.js';
import * as AppBskyGraphMuteActor from '@atproto/api/dist/client/types/app/bsky/graph/muteActor.js';
import * as AppBskyGraphMuteActorList from '@atproto/api/dist/client/types/app/bsky/graph/muteActorList.js';
import * as AppBskyGraphMuteThread from '@atproto/api/dist/client/types/app/bsky/graph/muteThread.js';
import * as AppBskyGraphSearchStarterPacks from '@atproto/api/dist/client/types/app/bsky/graph/searchStarterPacks.js';
import * as AppBskyGraphStarterpack from '@atproto/api/dist/client/types/app/bsky/graph/starterpack.js';
import * as AppBskyGraphUnmuteActor from '@atproto/api/dist/client/types/app/bsky/graph/unmuteActor.js';
import * as AppBskyGraphUnmuteActorList from '@atproto/api/dist/client/types/app/bsky/graph/unmuteActorList.js';
import * as AppBskyGraphUnmuteThread from '@atproto/api/dist/client/types/app/bsky/graph/unmuteThread.js';
import * as AppBskyGraphVerification from '@atproto/api/dist/client/types/app/bsky/graph/verification.js';
import * as AppBskyLabelerGetServices from '@atproto/api/dist/client/types/app/bsky/labeler/getServices.js';
import * as AppBskyLabelerService from '@atproto/api/dist/client/types/app/bsky/labeler/service.js';
import * as AppBskyNotificationDeclaration from '@atproto/api/dist/client/types/app/bsky/notification/declaration.js';
import * as AppBskyNotificationGetPreferences from '@atproto/api/dist/client/types/app/bsky/notification/getPreferences.js';
import * as AppBskyNotificationGetUnreadCount from '@atproto/api/dist/client/types/app/bsky/notification/getUnreadCount.js';
import * as AppBskyNotificationListActivitySubscriptions from '@atproto/api/dist/client/types/app/bsky/notification/listActivitySubscriptions.js';
import * as AppBskyNotificationListNotifications from '@atproto/api/dist/client/types/app/bsky/notification/listNotifications.js';
import * as AppBskyNotificationPutActivitySubscription from '@atproto/api/dist/client/types/app/bsky/notification/putActivitySubscription.js';
import * as AppBskyNotificationPutPreferences from '@atproto/api/dist/client/types/app/bsky/notification/putPreferences.js';
import * as AppBskyNotificationPutPreferencesV2 from '@atproto/api/dist/client/types/app/bsky/notification/putPreferencesV2.js';
import * as AppBskyNotificationRegisterPush from '@atproto/api/dist/client/types/app/bsky/notification/registerPush.js';
import * as AppBskyNotificationUpdateSeen from '@atproto/api/dist/client/types/app/bsky/notification/updateSeen.js';
import * as AppBskyUnspeccedGetAgeAssuranceState from '@atproto/api/dist/client/types/app/bsky/unspecced/getAgeAssuranceState.js';
import * as AppBskyUnspeccedGetConfig from '@atproto/api/dist/client/types/app/bsky/unspecced/getConfig.js';
import * as AppBskyUnspeccedGetPopularFeedGenerators from '@atproto/api/dist/client/types/app/bsky/unspecced/getPopularFeedGenerators.js';
import * as AppBskyUnspeccedGetPostThreadOtherV2 from '@atproto/api/dist/client/types/app/bsky/unspecced/getPostThreadOtherV2.js';
import * as AppBskyUnspeccedGetPostThreadV2 from '@atproto/api/dist/client/types/app/bsky/unspecced/getPostThreadV2.js';
import * as AppBskyUnspeccedGetSuggestedFeeds from '@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestedFeeds.js';
import * as AppBskyUnspeccedGetSuggestedFeedsSkeleton from '@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestedFeedsSkeleton.js';
import * as AppBskyUnspeccedGetSuggestedStarterPacks from '@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestedStarterPacks.js';
import * as AppBskyUnspeccedGetSuggestedStarterPacksSkeleton from '@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestedStarterPacksSkeleton.js';
import * as AppBskyUnspeccedGetSuggestedUsers from '@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestedUsers.js';
import * as AppBskyUnspeccedGetSuggestedUsersSkeleton from '@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestedUsersSkeleton.js';
import * as AppBskyUnspeccedGetSuggestionsSkeleton from '@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestionsSkeleton.js';
import * as AppBskyUnspeccedGetTaggedSuggestions from '@atproto/api/dist/client/types/app/bsky/unspecced/getTaggedSuggestions.js';
import * as AppBskyUnspeccedGetTrendingTopics from '@atproto/api/dist/client/types/app/bsky/unspecced/getTrendingTopics.js';
import * as AppBskyUnspeccedGetTrends from '@atproto/api/dist/client/types/app/bsky/unspecced/getTrends.js';
import * as AppBskyUnspeccedGetTrendsSkeleton from '@atproto/api/dist/client/types/app/bsky/unspecced/getTrendsSkeleton.js';
import * as AppBskyUnspeccedInitAgeAssurance from '@atproto/api/dist/client/types/app/bsky/unspecced/initAgeAssurance.js';
import * as AppBskyUnspeccedSearchActorsSkeleton from '@atproto/api/dist/client/types/app/bsky/unspecced/searchActorsSkeleton.js';
import * as AppBskyUnspeccedSearchPostsSkeleton from '@atproto/api/dist/client/types/app/bsky/unspecced/searchPostsSkeleton.js';
import * as AppBskyUnspeccedSearchStarterPacksSkeleton from '@atproto/api/dist/client/types/app/bsky/unspecced/searchStarterPacksSkeleton.js';
import * as AppBskyVideoGetJobStatus from '@atproto/api/dist/client/types/app/bsky/video/getJobStatus.js';
import * as AppBskyVideoGetUploadLimits from '@atproto/api/dist/client/types/app/bsky/video/getUploadLimits.js';
import * as AppBskyVideoUploadVideo from '@atproto/api/dist/client/types/app/bsky/video/uploadVideo.js';
import * as ChatBskyActorDeclaration from '@atproto/api/dist/client/types/chat/bsky/actor/declaration.js';
import * as ChatBskyActorDeleteAccount from '@atproto/api/dist/client/types/chat/bsky/actor/deleteAccount.js';
import * as ChatBskyActorExportAccountData from '@atproto/api/dist/client/types/chat/bsky/actor/exportAccountData.js';
import * as ChatBskyConvoAcceptConvo from '@atproto/api/dist/client/types/chat/bsky/convo/acceptConvo.js';
import * as ChatBskyConvoAddReaction from '@atproto/api/dist/client/types/chat/bsky/convo/addReaction.js';
import * as ChatBskyConvoDeleteMessageForSelf from '@atproto/api/dist/client/types/chat/bsky/convo/deleteMessageForSelf.js';
import * as ChatBskyConvoGetConvo from '@atproto/api/dist/client/types/chat/bsky/convo/getConvo.js';
import * as ChatBskyConvoGetConvoAvailability from '@atproto/api/dist/client/types/chat/bsky/convo/getConvoAvailability.js';
import * as ChatBskyConvoGetConvoForMembers from '@atproto/api/dist/client/types/chat/bsky/convo/getConvoForMembers.js';
import * as ChatBskyConvoGetLog from '@atproto/api/dist/client/types/chat/bsky/convo/getLog.js';
import * as ChatBskyConvoGetMessages from '@atproto/api/dist/client/types/chat/bsky/convo/getMessages.js';
import * as ChatBskyConvoLeaveConvo from '@atproto/api/dist/client/types/chat/bsky/convo/leaveConvo.js';
import * as ChatBskyConvoListConvos from '@atproto/api/dist/client/types/chat/bsky/convo/listConvos.js';
import * as ChatBskyConvoMuteConvo from '@atproto/api/dist/client/types/chat/bsky/convo/muteConvo.js';
import * as ChatBskyConvoRemoveReaction from '@atproto/api/dist/client/types/chat/bsky/convo/removeReaction.js';
import * as ChatBskyConvoSendMessage from '@atproto/api/dist/client/types/chat/bsky/convo/sendMessage.js';
import * as ChatBskyConvoSendMessageBatch from '@atproto/api/dist/client/types/chat/bsky/convo/sendMessageBatch.js';
import * as ChatBskyConvoUnmuteConvo from '@atproto/api/dist/client/types/chat/bsky/convo/unmuteConvo.js';
import * as ChatBskyConvoUpdateAllRead from '@atproto/api/dist/client/types/chat/bsky/convo/updateAllRead.js';
import * as ChatBskyConvoUpdateRead from '@atproto/api/dist/client/types/chat/bsky/convo/updateRead.js';
import * as ChatBskyModerationGetActorMetadata from '@atproto/api/dist/client/types/chat/bsky/moderation/getActorMetadata.js';
import * as ChatBskyModerationGetMessageContext from '@atproto/api/dist/client/types/chat/bsky/moderation/getMessageContext.js';
import * as ChatBskyModerationUpdateActorAccess from '@atproto/api/dist/client/types/chat/bsky/moderation/updateActorAccess.js';
import * as ToolsOzoneCommunicationCreateTemplate from '@atproto/api/dist/client/types/tools/ozone/communication/createTemplate.js';
import * as ToolsOzoneCommunicationDeleteTemplate from '@atproto/api/dist/client/types/tools/ozone/communication/deleteTemplate.js';
import * as ToolsOzoneCommunicationListTemplates from '@atproto/api/dist/client/types/tools/ozone/communication/listTemplates.js';
import * as ToolsOzoneCommunicationUpdateTemplate from '@atproto/api/dist/client/types/tools/ozone/communication/updateTemplate.js';
import * as ToolsOzoneHostingGetAccountHistory from '@atproto/api/dist/client/types/tools/ozone/hosting/getAccountHistory.js';
import * as ToolsOzoneModerationEmitEvent from '@atproto/api/dist/client/types/tools/ozone/moderation/emitEvent.js';
import * as ToolsOzoneModerationGetEvent from '@atproto/api/dist/client/types/tools/ozone/moderation/getEvent.js';
import * as ToolsOzoneModerationGetRecord from '@atproto/api/dist/client/types/tools/ozone/moderation/getRecord.js';
import * as ToolsOzoneModerationGetRecords from '@atproto/api/dist/client/types/tools/ozone/moderation/getRecords.js';
import * as ToolsOzoneModerationGetRepo from '@atproto/api/dist/client/types/tools/ozone/moderation/getRepo.js';
import * as ToolsOzoneModerationGetReporterStats from '@atproto/api/dist/client/types/tools/ozone/moderation/getReporterStats.js';
import * as ToolsOzoneModerationGetRepos from '@atproto/api/dist/client/types/tools/ozone/moderation/getRepos.js';
import * as ToolsOzoneModerationGetSubjects from '@atproto/api/dist/client/types/tools/ozone/moderation/getSubjects.js';
import * as ToolsOzoneModerationQueryEvents from '@atproto/api/dist/client/types/tools/ozone/moderation/queryEvents.js';
import * as ToolsOzoneModerationQueryStatuses from '@atproto/api/dist/client/types/tools/ozone/moderation/queryStatuses.js';
import * as ToolsOzoneModerationSearchRepos from '@atproto/api/dist/client/types/tools/ozone/moderation/searchRepos.js';
import * as ToolsOzoneSafelinkAddRule from '@atproto/api/dist/client/types/tools/ozone/safelink/addRule.js';
import * as ToolsOzoneSafelinkQueryEvents from '@atproto/api/dist/client/types/tools/ozone/safelink/queryEvents.js';
import * as ToolsOzoneSafelinkQueryRules from '@atproto/api/dist/client/types/tools/ozone/safelink/queryRules.js';
import * as ToolsOzoneSafelinkRemoveRule from '@atproto/api/dist/client/types/tools/ozone/safelink/removeRule.js';
import * as ToolsOzoneSafelinkUpdateRule from '@atproto/api/dist/client/types/tools/ozone/safelink/updateRule.js';
import * as ToolsOzoneServerGetConfig from '@atproto/api/dist/client/types/tools/ozone/server/getConfig.js';
import * as ToolsOzoneSetAddValues from '@atproto/api/dist/client/types/tools/ozone/set/addValues.js';
import * as ToolsOzoneSetDeleteSet from '@atproto/api/dist/client/types/tools/ozone/set/deleteSet.js';
import * as ToolsOzoneSetDeleteValues from '@atproto/api/dist/client/types/tools/ozone/set/deleteValues.js';
import * as ToolsOzoneSetGetValues from '@atproto/api/dist/client/types/tools/ozone/set/getValues.js';
import * as ToolsOzoneSetQuerySets from '@atproto/api/dist/client/types/tools/ozone/set/querySets.js';
import * as ToolsOzoneSetUpsertSet from '@atproto/api/dist/client/types/tools/ozone/set/upsertSet.js';
import * as ToolsOzoneSettingListOptions from '@atproto/api/dist/client/types/tools/ozone/setting/listOptions.js';
import * as ToolsOzoneSettingRemoveOptions from '@atproto/api/dist/client/types/tools/ozone/setting/removeOptions.js';
import * as ToolsOzoneSettingUpsertOption from '@atproto/api/dist/client/types/tools/ozone/setting/upsertOption.js';
import * as ToolsOzoneSignatureFindCorrelation from '@atproto/api/dist/client/types/tools/ozone/signature/findCorrelation.js';
import * as ToolsOzoneSignatureFindRelatedAccounts from '@atproto/api/dist/client/types/tools/ozone/signature/findRelatedAccounts.js';
import * as ToolsOzoneSignatureSearchAccounts from '@atproto/api/dist/client/types/tools/ozone/signature/searchAccounts.js';
import * as ToolsOzoneTeamAddMember from '@atproto/api/dist/client/types/tools/ozone/team/addMember.js';
import * as ToolsOzoneTeamDeleteMember from '@atproto/api/dist/client/types/tools/ozone/team/deleteMember.js';
import * as ToolsOzoneTeamListMembers from '@atproto/api/dist/client/types/tools/ozone/team/listMembers.js';
import * as ToolsOzoneTeamUpdateMember from '@atproto/api/dist/client/types/tools/ozone/team/updateMember.js';
import * as ToolsOzoneVerificationGrantVerifications from '@atproto/api/dist/client/types/tools/ozone/verification/grantVerifications.js';
import * as ToolsOzoneVerificationListVerifications from '@atproto/api/dist/client/types/tools/ozone/verification/listVerifications.js';
import * as ToolsOzoneVerificationRevokeVerifications from '@atproto/api/dist/client/types/tools/ozone/verification/revokeVerifications.js';
export * as ComAtprotoAdminDefs from '@atproto/api/dist/client/types/com/atproto/admin/defs.js';
export * as ComAtprotoAdminDeleteAccount from '@atproto/api/dist/client/types/com/atproto/admin/deleteAccount.js';
export * as ComAtprotoAdminDisableAccountInvites from '@atproto/api/dist/client/types/com/atproto/admin/disableAccountInvites.js';
export * as ComAtprotoAdminDisableInviteCodes from '@atproto/api/dist/client/types/com/atproto/admin/disableInviteCodes.js';
export * as ComAtprotoAdminEnableAccountInvites from '@atproto/api/dist/client/types/com/atproto/admin/enableAccountInvites.js';
export * as ComAtprotoAdminGetAccountInfo from '@atproto/api/dist/client/types/com/atproto/admin/getAccountInfo.js';
export * as ComAtprotoAdminGetAccountInfos from '@atproto/api/dist/client/types/com/atproto/admin/getAccountInfos.js';
export * as ComAtprotoAdminGetInviteCodes from '@atproto/api/dist/client/types/com/atproto/admin/getInviteCodes.js';
export * as ComAtprotoAdminGetSubjectStatus from '@atproto/api/dist/client/types/com/atproto/admin/getSubjectStatus.js';
export * as ComAtprotoAdminSearchAccounts from '@atproto/api/dist/client/types/com/atproto/admin/searchAccounts.js';
export * as ComAtprotoAdminSendEmail from '@atproto/api/dist/client/types/com/atproto/admin/sendEmail.js';
export * as ComAtprotoAdminUpdateAccountEmail from '@atproto/api/dist/client/types/com/atproto/admin/updateAccountEmail.js';
export * as ComAtprotoAdminUpdateAccountHandle from '@atproto/api/dist/client/types/com/atproto/admin/updateAccountHandle.js';
export * as ComAtprotoAdminUpdateAccountPassword from '@atproto/api/dist/client/types/com/atproto/admin/updateAccountPassword.js';
export * as ComAtprotoAdminUpdateAccountSigningKey from '@atproto/api/dist/client/types/com/atproto/admin/updateAccountSigningKey.js';
export * as ComAtprotoAdminUpdateSubjectStatus from '@atproto/api/dist/client/types/com/atproto/admin/updateSubjectStatus.js';
export * as ComAtprotoIdentityDefs from '@atproto/api/dist/client/types/com/atproto/identity/defs.js';
export * as ComAtprotoIdentityGetRecommendedDidCredentials from '@atproto/api/dist/client/types/com/atproto/identity/getRecommendedDidCredentials.js';
export * as ComAtprotoIdentityRefreshIdentity from '@atproto/api/dist/client/types/com/atproto/identity/refreshIdentity.js';
export * as ComAtprotoIdentityRequestPlcOperationSignature from '@atproto/api/dist/client/types/com/atproto/identity/requestPlcOperationSignature.js';
export * as ComAtprotoIdentityResolveDid from '@atproto/api/dist/client/types/com/atproto/identity/resolveDid.js';
export * as ComAtprotoIdentityResolveHandle from '@atproto/api/dist/client/types/com/atproto/identity/resolveHandle.js';
export * as ComAtprotoIdentityResolveIdentity from '@atproto/api/dist/client/types/com/atproto/identity/resolveIdentity.js';
export * as ComAtprotoIdentitySignPlcOperation from '@atproto/api/dist/client/types/com/atproto/identity/signPlcOperation.js';
export * as ComAtprotoIdentitySubmitPlcOperation from '@atproto/api/dist/client/types/com/atproto/identity/submitPlcOperation.js';
export * as ComAtprotoIdentityUpdateHandle from '@atproto/api/dist/client/types/com/atproto/identity/updateHandle.js';
export * as ComAtprotoLabelDefs from '@atproto/api/dist/client/types/com/atproto/label/defs.js';
export * as ComAtprotoLabelQueryLabels from '@atproto/api/dist/client/types/com/atproto/label/queryLabels.js';
export * as ComAtprotoLabelSubscribeLabels from '@atproto/api/dist/client/types/com/atproto/label/subscribeLabels.js';
export * as ComAtprotoLexiconSchema from '@atproto/api/dist/client/types/com/atproto/lexicon/schema.js';
export * as ComAtprotoModerationCreateReport from '@atproto/api/dist/client/types/com/atproto/moderation/createReport.js';
export * as ComAtprotoModerationDefs from '@atproto/api/dist/client/types/com/atproto/moderation/defs.js';
export * as ComAtprotoRepoApplyWrites from '@atproto/api/dist/client/types/com/atproto/repo/applyWrites.js';
export * as ComAtprotoRepoCreateRecord from '@atproto/api/dist/client/types/com/atproto/repo/createRecord.js';
export * as ComAtprotoRepoDefs from '@atproto/api/dist/client/types/com/atproto/repo/defs.js';
export * as ComAtprotoRepoDeleteRecord from '@atproto/api/dist/client/types/com/atproto/repo/deleteRecord.js';
export * as ComAtprotoRepoDescribeRepo from '@atproto/api/dist/client/types/com/atproto/repo/describeRepo.js';
export * as ComAtprotoRepoGetRecord from '@atproto/api/dist/client/types/com/atproto/repo/getRecord.js';
export * as ComAtprotoRepoImportRepo from '@atproto/api/dist/client/types/com/atproto/repo/importRepo.js';
export * as ComAtprotoRepoListMissingBlobs from '@atproto/api/dist/client/types/com/atproto/repo/listMissingBlobs.js';
export * as ComAtprotoRepoListRecords from '@atproto/api/dist/client/types/com/atproto/repo/listRecords.js';
export * as ComAtprotoRepoPutRecord from '@atproto/api/dist/client/types/com/atproto/repo/putRecord.js';
export * as ComAtprotoRepoStrongRef from '@atproto/api/dist/client/types/com/atproto/repo/strongRef.js';
export * as ComAtprotoRepoUploadBlob from '@atproto/api/dist/client/types/com/atproto/repo/uploadBlob.js';
export * as ComAtprotoServerActivateAccount from '@atproto/api/dist/client/types/com/atproto/server/activateAccount.js';
export * as ComAtprotoServerCheckAccountStatus from '@atproto/api/dist/client/types/com/atproto/server/checkAccountStatus.js';
export * as ComAtprotoServerConfirmEmail from '@atproto/api/dist/client/types/com/atproto/server/confirmEmail.js';
export * as ComAtprotoServerCreateAccount from '@atproto/api/dist/client/types/com/atproto/server/createAccount.js';
export * as ComAtprotoServerCreateAppPassword from '@atproto/api/dist/client/types/com/atproto/server/createAppPassword.js';
export * as ComAtprotoServerCreateInviteCode from '@atproto/api/dist/client/types/com/atproto/server/createInviteCode.js';
export * as ComAtprotoServerCreateInviteCodes from '@atproto/api/dist/client/types/com/atproto/server/createInviteCodes.js';
export * as ComAtprotoServerCreateSession from '@atproto/api/dist/client/types/com/atproto/server/createSession.js';
export * as ComAtprotoServerDeactivateAccount from '@atproto/api/dist/client/types/com/atproto/server/deactivateAccount.js';
export * as ComAtprotoServerDefs from '@atproto/api/dist/client/types/com/atproto/server/defs.js';
export * as ComAtprotoServerDeleteAccount from '@atproto/api/dist/client/types/com/atproto/server/deleteAccount.js';
export * as ComAtprotoServerDeleteSession from '@atproto/api/dist/client/types/com/atproto/server/deleteSession.js';
export * as ComAtprotoServerDescribeServer from '@atproto/api/dist/client/types/com/atproto/server/describeServer.js';
export * as ComAtprotoServerGetAccountInviteCodes from '@atproto/api/dist/client/types/com/atproto/server/getAccountInviteCodes.js';
export * as ComAtprotoServerGetServiceAuth from '@atproto/api/dist/client/types/com/atproto/server/getServiceAuth.js';
export * as ComAtprotoServerGetSession from '@atproto/api/dist/client/types/com/atproto/server/getSession.js';
export * as ComAtprotoServerListAppPasswords from '@atproto/api/dist/client/types/com/atproto/server/listAppPasswords.js';
export * as ComAtprotoServerRefreshSession from '@atproto/api/dist/client/types/com/atproto/server/refreshSession.js';
export * as ComAtprotoServerRequestAccountDelete from '@atproto/api/dist/client/types/com/atproto/server/requestAccountDelete.js';
export * as ComAtprotoServerRequestEmailConfirmation from '@atproto/api/dist/client/types/com/atproto/server/requestEmailConfirmation.js';
export * as ComAtprotoServerRequestEmailUpdate from '@atproto/api/dist/client/types/com/atproto/server/requestEmailUpdate.js';
export * as ComAtprotoServerRequestPasswordReset from '@atproto/api/dist/client/types/com/atproto/server/requestPasswordReset.js';
export * as ComAtprotoServerReserveSigningKey from '@atproto/api/dist/client/types/com/atproto/server/reserveSigningKey.js';
export * as ComAtprotoServerResetPassword from '@atproto/api/dist/client/types/com/atproto/server/resetPassword.js';
export * as ComAtprotoServerRevokeAppPassword from '@atproto/api/dist/client/types/com/atproto/server/revokeAppPassword.js';
export * as ComAtprotoServerUpdateEmail from '@atproto/api/dist/client/types/com/atproto/server/updateEmail.js';
export * as ComAtprotoSyncDefs from '@atproto/api/dist/client/types/com/atproto/sync/defs.js';
export * as ComAtprotoSyncGetBlob from '@atproto/api/dist/client/types/com/atproto/sync/getBlob.js';
export * as ComAtprotoSyncGetBlocks from '@atproto/api/dist/client/types/com/atproto/sync/getBlocks.js';
export * as ComAtprotoSyncGetCheckout from '@atproto/api/dist/client/types/com/atproto/sync/getCheckout.js';
export * as ComAtprotoSyncGetHead from '@atproto/api/dist/client/types/com/atproto/sync/getHead.js';
export * as ComAtprotoSyncGetHostStatus from '@atproto/api/dist/client/types/com/atproto/sync/getHostStatus.js';
export * as ComAtprotoSyncGetLatestCommit from '@atproto/api/dist/client/types/com/atproto/sync/getLatestCommit.js';
export * as ComAtprotoSyncGetRecord from '@atproto/api/dist/client/types/com/atproto/sync/getRecord.js';
export * as ComAtprotoSyncGetRepo from '@atproto/api/dist/client/types/com/atproto/sync/getRepo.js';
export * as ComAtprotoSyncGetRepoStatus from '@atproto/api/dist/client/types/com/atproto/sync/getRepoStatus.js';
export * as ComAtprotoSyncListBlobs from '@atproto/api/dist/client/types/com/atproto/sync/listBlobs.js';
export * as ComAtprotoSyncListHosts from '@atproto/api/dist/client/types/com/atproto/sync/listHosts.js';
export * as ComAtprotoSyncListRepos from '@atproto/api/dist/client/types/com/atproto/sync/listRepos.js';
export * as ComAtprotoSyncListReposByCollection from '@atproto/api/dist/client/types/com/atproto/sync/listReposByCollection.js';
export * as ComAtprotoSyncNotifyOfUpdate from '@atproto/api/dist/client/types/com/atproto/sync/notifyOfUpdate.js';
export * as ComAtprotoSyncRequestCrawl from '@atproto/api/dist/client/types/com/atproto/sync/requestCrawl.js';
export * as ComAtprotoSyncSubscribeRepos from '@atproto/api/dist/client/types/com/atproto/sync/subscribeRepos.js';
export * as ComAtprotoTempAddReservedHandle from '@atproto/api/dist/client/types/com/atproto/temp/addReservedHandle.js';
export * as ComAtprotoTempCheckSignupQueue from '@atproto/api/dist/client/types/com/atproto/temp/checkSignupQueue.js';
export * as ComAtprotoTempFetchLabels from '@atproto/api/dist/client/types/com/atproto/temp/fetchLabels.js';
export * as ComAtprotoTempRequestPhoneVerification from '@atproto/api/dist/client/types/com/atproto/temp/requestPhoneVerification.js';
export * as AppBskyActorDefs from '@atproto/api/dist/client/types/app/bsky/actor/defs.js';
export * as AppBskyActorGetPreferences from '@atproto/api/dist/client/types/app/bsky/actor/getPreferences.js';
export * as AppBskyActorGetProfile from '@atproto/api/dist/client/types/app/bsky/actor/getProfile.js';
export * as AppBskyActorGetProfiles from '@atproto/api/dist/client/types/app/bsky/actor/getProfiles.js';
export * as AppBskyActorGetSuggestions from '@atproto/api/dist/client/types/app/bsky/actor/getSuggestions.js';
export * as AppBskyActorProfile from '@atproto/api/dist/client/types/app/bsky/actor/profile.js';
export * as AppBskyActorPutPreferences from '@atproto/api/dist/client/types/app/bsky/actor/putPreferences.js';
export * as AppBskyActorSearchActors from '@atproto/api/dist/client/types/app/bsky/actor/searchActors.js';
export * as AppBskyActorSearchActorsTypeahead from '@atproto/api/dist/client/types/app/bsky/actor/searchActorsTypeahead.js';
export * as AppBskyActorStatus from '@atproto/api/dist/client/types/app/bsky/actor/status.js';
export * as AppBskyEmbedDefs from '@atproto/api/dist/client/types/app/bsky/embed/defs.js';
export * as AppBskyEmbedExternal from '@atproto/api/dist/client/types/app/bsky/embed/external.js';
export * as AppBskyEmbedImages from '@atproto/api/dist/client/types/app/bsky/embed/images.js';
export * as AppBskyEmbedRecord from '@atproto/api/dist/client/types/app/bsky/embed/record.js';
export * as AppBskyEmbedRecordWithMedia from '@atproto/api/dist/client/types/app/bsky/embed/recordWithMedia.js';
export * as AppBskyEmbedVideo from '@atproto/api/dist/client/types/app/bsky/embed/video.js';
export * as AppBskyFeedDefs from '@atproto/api/dist/client/types/app/bsky/feed/defs.js';
export * as AppBskyFeedDescribeFeedGenerator from '@atproto/api/dist/client/types/app/bsky/feed/describeFeedGenerator.js';
export * as AppBskyFeedGenerator from '@atproto/api/dist/client/types/app/bsky/feed/generator.js';
export * as AppBskyFeedGetActorFeeds from '@atproto/api/dist/client/types/app/bsky/feed/getActorFeeds.js';
export * as AppBskyFeedGetActorLikes from '@atproto/api/dist/client/types/app/bsky/feed/getActorLikes.js';
export * as AppBskyFeedGetAuthorFeed from '@atproto/api/dist/client/types/app/bsky/feed/getAuthorFeed.js';
export * as AppBskyFeedGetFeed from '@atproto/api/dist/client/types/app/bsky/feed/getFeed.js';
export * as AppBskyFeedGetFeedGenerator from '@atproto/api/dist/client/types/app/bsky/feed/getFeedGenerator.js';
export * as AppBskyFeedGetFeedGenerators from '@atproto/api/dist/client/types/app/bsky/feed/getFeedGenerators.js';
export * as AppBskyFeedGetFeedSkeleton from '@atproto/api/dist/client/types/app/bsky/feed/getFeedSkeleton.js';
export * as AppBskyFeedGetLikes from '@atproto/api/dist/client/types/app/bsky/feed/getLikes.js';
export * as AppBskyFeedGetListFeed from '@atproto/api/dist/client/types/app/bsky/feed/getListFeed.js';
export * as AppBskyFeedGetPostThread from '@atproto/api/dist/client/types/app/bsky/feed/getPostThread.js';
export * as AppBskyFeedGetPosts from '@atproto/api/dist/client/types/app/bsky/feed/getPosts.js';
export * as AppBskyFeedGetQuotes from '@atproto/api/dist/client/types/app/bsky/feed/getQuotes.js';
export * as AppBskyFeedGetRepostedBy from '@atproto/api/dist/client/types/app/bsky/feed/getRepostedBy.js';
export * as AppBskyFeedGetSuggestedFeeds from '@atproto/api/dist/client/types/app/bsky/feed/getSuggestedFeeds.js';
export * as AppBskyFeedGetTimeline from '@atproto/api/dist/client/types/app/bsky/feed/getTimeline.js';
export * as AppBskyFeedLike from '@atproto/api/dist/client/types/app/bsky/feed/like.js';
export * as AppBskyFeedPost from '@atproto/api/dist/client/types/app/bsky/feed/post.js';
export * as AppBskyFeedPostgate from '@atproto/api/dist/client/types/app/bsky/feed/postgate.js';
export * as AppBskyFeedRepost from '@atproto/api/dist/client/types/app/bsky/feed/repost.js';
export * as AppBskyFeedSearchPosts from '@atproto/api/dist/client/types/app/bsky/feed/searchPosts.js';
export * as AppBskyFeedSendInteractions from '@atproto/api/dist/client/types/app/bsky/feed/sendInteractions.js';
export * as AppBskyFeedThreadgate from '@atproto/api/dist/client/types/app/bsky/feed/threadgate.js';
export * as AppBskyGraphBlock from '@atproto/api/dist/client/types/app/bsky/graph/block.js';
export * as AppBskyGraphDefs from '@atproto/api/dist/client/types/app/bsky/graph/defs.js';
export * as AppBskyGraphFollow from '@atproto/api/dist/client/types/app/bsky/graph/follow.js';
export * as AppBskyGraphGetActorStarterPacks from '@atproto/api/dist/client/types/app/bsky/graph/getActorStarterPacks.js';
export * as AppBskyGraphGetBlocks from '@atproto/api/dist/client/types/app/bsky/graph/getBlocks.js';
export * as AppBskyGraphGetFollowers from '@atproto/api/dist/client/types/app/bsky/graph/getFollowers.js';
export * as AppBskyGraphGetFollows from '@atproto/api/dist/client/types/app/bsky/graph/getFollows.js';
export * as AppBskyGraphGetKnownFollowers from '@atproto/api/dist/client/types/app/bsky/graph/getKnownFollowers.js';
export * as AppBskyGraphGetList from '@atproto/api/dist/client/types/app/bsky/graph/getList.js';
export * as AppBskyGraphGetListBlocks from '@atproto/api/dist/client/types/app/bsky/graph/getListBlocks.js';
export * as AppBskyGraphGetListMutes from '@atproto/api/dist/client/types/app/bsky/graph/getListMutes.js';
export * as AppBskyGraphGetLists from '@atproto/api/dist/client/types/app/bsky/graph/getLists.js';
export * as AppBskyGraphGetMutes from '@atproto/api/dist/client/types/app/bsky/graph/getMutes.js';
export * as AppBskyGraphGetRelationships from '@atproto/api/dist/client/types/app/bsky/graph/getRelationships.js';
export * as AppBskyGraphGetStarterPack from '@atproto/api/dist/client/types/app/bsky/graph/getStarterPack.js';
export * as AppBskyGraphGetStarterPacks from '@atproto/api/dist/client/types/app/bsky/graph/getStarterPacks.js';
export * as AppBskyGraphGetSuggestedFollowsByActor from '@atproto/api/dist/client/types/app/bsky/graph/getSuggestedFollowsByActor.js';
export * as AppBskyGraphList from '@atproto/api/dist/client/types/app/bsky/graph/list.js';
export * as AppBskyGraphListblock from '@atproto/api/dist/client/types/app/bsky/graph/listblock.js';
export * as AppBskyGraphListitem from '@atproto/api/dist/client/types/app/bsky/graph/listitem.js';
export * as AppBskyGraphMuteActor from '@atproto/api/dist/client/types/app/bsky/graph/muteActor.js';
export * as AppBskyGraphMuteActorList from '@atproto/api/dist/client/types/app/bsky/graph/muteActorList.js';
export * as AppBskyGraphMuteThread from '@atproto/api/dist/client/types/app/bsky/graph/muteThread.js';
export * as AppBskyGraphSearchStarterPacks from '@atproto/api/dist/client/types/app/bsky/graph/searchStarterPacks.js';
export * as AppBskyGraphStarterpack from '@atproto/api/dist/client/types/app/bsky/graph/starterpack.js';
export * as AppBskyGraphUnmuteActor from '@atproto/api/dist/client/types/app/bsky/graph/unmuteActor.js';
export * as AppBskyGraphUnmuteActorList from '@atproto/api/dist/client/types/app/bsky/graph/unmuteActorList.js';
export * as AppBskyGraphUnmuteThread from '@atproto/api/dist/client/types/app/bsky/graph/unmuteThread.js';
export * as AppBskyGraphVerification from '@atproto/api/dist/client/types/app/bsky/graph/verification.js';
export * as AppBskyLabelerDefs from '@atproto/api/dist/client/types/app/bsky/labeler/defs.js';
export * as AppBskyLabelerGetServices from '@atproto/api/dist/client/types/app/bsky/labeler/getServices.js';
export * as AppBskyLabelerService from '@atproto/api/dist/client/types/app/bsky/labeler/service.js';
export * as AppBskyNotificationDeclaration from '@atproto/api/dist/client/types/app/bsky/notification/declaration.js';
export * as AppBskyNotificationDefs from '@atproto/api/dist/client/types/app/bsky/notification/defs.js';
export * as AppBskyNotificationGetPreferences from '@atproto/api/dist/client/types/app/bsky/notification/getPreferences.js';
export * as AppBskyNotificationGetUnreadCount from '@atproto/api/dist/client/types/app/bsky/notification/getUnreadCount.js';
export * as AppBskyNotificationListActivitySubscriptions from '@atproto/api/dist/client/types/app/bsky/notification/listActivitySubscriptions.js';
export * as AppBskyNotificationListNotifications from '@atproto/api/dist/client/types/app/bsky/notification/listNotifications.js';
export * as AppBskyNotificationPutActivitySubscription from '@atproto/api/dist/client/types/app/bsky/notification/putActivitySubscription.js';
export * as AppBskyNotificationPutPreferences from '@atproto/api/dist/client/types/app/bsky/notification/putPreferences.js';
export * as AppBskyNotificationPutPreferencesV2 from '@atproto/api/dist/client/types/app/bsky/notification/putPreferencesV2.js';
export * as AppBskyNotificationRegisterPush from '@atproto/api/dist/client/types/app/bsky/notification/registerPush.js';
export * as AppBskyNotificationUpdateSeen from '@atproto/api/dist/client/types/app/bsky/notification/updateSeen.js';
export * as AppBskyRichtextFacet from '@atproto/api/dist/client/types/app/bsky/richtext/facet.js';
export * as AppBskyUnspeccedDefs from '@atproto/api/dist/client/types/app/bsky/unspecced/defs.js';
export * as AppBskyUnspeccedGetAgeAssuranceState from '@atproto/api/dist/client/types/app/bsky/unspecced/getAgeAssuranceState.js';
export * as AppBskyUnspeccedGetConfig from '@atproto/api/dist/client/types/app/bsky/unspecced/getConfig.js';
export * as AppBskyUnspeccedGetPopularFeedGenerators from '@atproto/api/dist/client/types/app/bsky/unspecced/getPopularFeedGenerators.js';
export * as AppBskyUnspeccedGetPostThreadOtherV2 from '@atproto/api/dist/client/types/app/bsky/unspecced/getPostThreadOtherV2.js';
export * as AppBskyUnspeccedGetPostThreadV2 from '@atproto/api/dist/client/types/app/bsky/unspecced/getPostThreadV2.js';
export * as AppBskyUnspeccedGetSuggestedFeeds from '@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestedFeeds.js';
export * as AppBskyUnspeccedGetSuggestedFeedsSkeleton from '@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestedFeedsSkeleton.js';
export * as AppBskyUnspeccedGetSuggestedStarterPacks from '@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestedStarterPacks.js';
export * as AppBskyUnspeccedGetSuggestedStarterPacksSkeleton from '@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestedStarterPacksSkeleton.js';
export * as AppBskyUnspeccedGetSuggestedUsers from '@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestedUsers.js';
export * as AppBskyUnspeccedGetSuggestedUsersSkeleton from '@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestedUsersSkeleton.js';
export * as AppBskyUnspeccedGetSuggestionsSkeleton from '@atproto/api/dist/client/types/app/bsky/unspecced/getSuggestionsSkeleton.js';
export * as AppBskyUnspeccedGetTaggedSuggestions from '@atproto/api/dist/client/types/app/bsky/unspecced/getTaggedSuggestions.js';
export * as AppBskyUnspeccedGetTrendingTopics from '@atproto/api/dist/client/types/app/bsky/unspecced/getTrendingTopics.js';
export * as AppBskyUnspeccedGetTrends from '@atproto/api/dist/client/types/app/bsky/unspecced/getTrends.js';
export * as AppBskyUnspeccedGetTrendsSkeleton from '@atproto/api/dist/client/types/app/bsky/unspecced/getTrendsSkeleton.js';
export * as AppBskyUnspeccedInitAgeAssurance from '@atproto/api/dist/client/types/app/bsky/unspecced/initAgeAssurance.js';
export * as AppBskyUnspeccedSearchActorsSkeleton from '@atproto/api/dist/client/types/app/bsky/unspecced/searchActorsSkeleton.js';
export * as AppBskyUnspeccedSearchPostsSkeleton from '@atproto/api/dist/client/types/app/bsky/unspecced/searchPostsSkeleton.js';
export * as AppBskyUnspeccedSearchStarterPacksSkeleton from '@atproto/api/dist/client/types/app/bsky/unspecced/searchStarterPacksSkeleton.js';
export * as AppBskyVideoDefs from '@atproto/api/dist/client/types/app/bsky/video/defs.js';
export * as AppBskyVideoGetJobStatus from '@atproto/api/dist/client/types/app/bsky/video/getJobStatus.js';
export * as AppBskyVideoGetUploadLimits from '@atproto/api/dist/client/types/app/bsky/video/getUploadLimits.js';
export * as AppBskyVideoUploadVideo from '@atproto/api/dist/client/types/app/bsky/video/uploadVideo.js';
export * as ChatBskyActorDeclaration from '@atproto/api/dist/client/types/chat/bsky/actor/declaration.js';
export * as ChatBskyActorDefs from '@atproto/api/dist/client/types/chat/bsky/actor/defs.js';
export * as ChatBskyActorDeleteAccount from '@atproto/api/dist/client/types/chat/bsky/actor/deleteAccount.js';
export * as ChatBskyActorExportAccountData from '@atproto/api/dist/client/types/chat/bsky/actor/exportAccountData.js';
export * as ChatBskyConvoAcceptConvo from '@atproto/api/dist/client/types/chat/bsky/convo/acceptConvo.js';
export * as ChatBskyConvoAddReaction from '@atproto/api/dist/client/types/chat/bsky/convo/addReaction.js';
export * as ChatBskyConvoDefs from '@atproto/api/dist/client/types/chat/bsky/convo/defs.js';
export * as ChatBskyConvoDeleteMessageForSelf from '@atproto/api/dist/client/types/chat/bsky/convo/deleteMessageForSelf.js';
export * as ChatBskyConvoGetConvo from '@atproto/api/dist/client/types/chat/bsky/convo/getConvo.js';
export * as ChatBskyConvoGetConvoAvailability from '@atproto/api/dist/client/types/chat/bsky/convo/getConvoAvailability.js';
export * as ChatBskyConvoGetConvoForMembers from '@atproto/api/dist/client/types/chat/bsky/convo/getConvoForMembers.js';
export * as ChatBskyConvoGetLog from '@atproto/api/dist/client/types/chat/bsky/convo/getLog.js';
export * as ChatBskyConvoGetMessages from '@atproto/api/dist/client/types/chat/bsky/convo/getMessages.js';
export * as ChatBskyConvoLeaveConvo from '@atproto/api/dist/client/types/chat/bsky/convo/leaveConvo.js';
export * as ChatBskyConvoListConvos from '@atproto/api/dist/client/types/chat/bsky/convo/listConvos.js';
export * as ChatBskyConvoMuteConvo from '@atproto/api/dist/client/types/chat/bsky/convo/muteConvo.js';
export * as ChatBskyConvoRemoveReaction from '@atproto/api/dist/client/types/chat/bsky/convo/removeReaction.js';
export * as ChatBskyConvoSendMessage from '@atproto/api/dist/client/types/chat/bsky/convo/sendMessage.js';
export * as ChatBskyConvoSendMessageBatch from '@atproto/api/dist/client/types/chat/bsky/convo/sendMessageBatch.js';
export * as ChatBskyConvoUnmuteConvo from '@atproto/api/dist/client/types/chat/bsky/convo/unmuteConvo.js';
export * as ChatBskyConvoUpdateAllRead from '@atproto/api/dist/client/types/chat/bsky/convo/updateAllRead.js';
export * as ChatBskyConvoUpdateRead from '@atproto/api/dist/client/types/chat/bsky/convo/updateRead.js';
export * as ChatBskyModerationGetActorMetadata from '@atproto/api/dist/client/types/chat/bsky/moderation/getActorMetadata.js';
export * as ChatBskyModerationGetMessageContext from '@atproto/api/dist/client/types/chat/bsky/moderation/getMessageContext.js';
export * as ChatBskyModerationUpdateActorAccess from '@atproto/api/dist/client/types/chat/bsky/moderation/updateActorAccess.js';
export * as ToolsOzoneCommunicationCreateTemplate from '@atproto/api/dist/client/types/tools/ozone/communication/createTemplate.js';
export * as ToolsOzoneCommunicationDefs from '@atproto/api/dist/client/types/tools/ozone/communication/defs.js';
export * as ToolsOzoneCommunicationDeleteTemplate from '@atproto/api/dist/client/types/tools/ozone/communication/deleteTemplate.js';
export * as ToolsOzoneCommunicationListTemplates from '@atproto/api/dist/client/types/tools/ozone/communication/listTemplates.js';
export * as ToolsOzoneCommunicationUpdateTemplate from '@atproto/api/dist/client/types/tools/ozone/communication/updateTemplate.js';
export * as ToolsOzoneHostingGetAccountHistory from '@atproto/api/dist/client/types/tools/ozone/hosting/getAccountHistory.js';
export * as ToolsOzoneModerationDefs from '@atproto/api/dist/client/types/tools/ozone/moderation/defs.js';
export * as ToolsOzoneModerationEmitEvent from '@atproto/api/dist/client/types/tools/ozone/moderation/emitEvent.js';
export * as ToolsOzoneModerationGetEvent from '@atproto/api/dist/client/types/tools/ozone/moderation/getEvent.js';
export * as ToolsOzoneModerationGetRecord from '@atproto/api/dist/client/types/tools/ozone/moderation/getRecord.js';
export * as ToolsOzoneModerationGetRecords from '@atproto/api/dist/client/types/tools/ozone/moderation/getRecords.js';
export * as ToolsOzoneModerationGetRepo from '@atproto/api/dist/client/types/tools/ozone/moderation/getRepo.js';
export * as ToolsOzoneModerationGetReporterStats from '@atproto/api/dist/client/types/tools/ozone/moderation/getReporterStats.js';
export * as ToolsOzoneModerationGetRepos from '@atproto/api/dist/client/types/tools/ozone/moderation/getRepos.js';
export * as ToolsOzoneModerationGetSubjects from '@atproto/api/dist/client/types/tools/ozone/moderation/getSubjects.js';
export * as ToolsOzoneModerationQueryEvents from '@atproto/api/dist/client/types/tools/ozone/moderation/queryEvents.js';
export * as ToolsOzoneModerationQueryStatuses from '@atproto/api/dist/client/types/tools/ozone/moderation/queryStatuses.js';
export * as ToolsOzoneModerationSearchRepos from '@atproto/api/dist/client/types/tools/ozone/moderation/searchRepos.js';
export * as ToolsOzoneSafelinkAddRule from '@atproto/api/dist/client/types/tools/ozone/safelink/addRule.js';
export * as ToolsOzoneSafelinkDefs from '@atproto/api/dist/client/types/tools/ozone/safelink/defs.js';
export * as ToolsOzoneSafelinkQueryEvents from '@atproto/api/dist/client/types/tools/ozone/safelink/queryEvents.js';
export * as ToolsOzoneSafelinkQueryRules from '@atproto/api/dist/client/types/tools/ozone/safelink/queryRules.js';
export * as ToolsOzoneSafelinkRemoveRule from '@atproto/api/dist/client/types/tools/ozone/safelink/removeRule.js';
export * as ToolsOzoneSafelinkUpdateRule from '@atproto/api/dist/client/types/tools/ozone/safelink/updateRule.js';
export * as ToolsOzoneServerGetConfig from '@atproto/api/dist/client/types/tools/ozone/server/getConfig.js';
export * as ToolsOzoneSetAddValues from '@atproto/api/dist/client/types/tools/ozone/set/addValues.js';
export * as ToolsOzoneSetDefs from '@atproto/api/dist/client/types/tools/ozone/set/defs.js';
export * as ToolsOzoneSetDeleteSet from '@atproto/api/dist/client/types/tools/ozone/set/deleteSet.js';
export * as ToolsOzoneSetDeleteValues from '@atproto/api/dist/client/types/tools/ozone/set/deleteValues.js';
export * as ToolsOzoneSetGetValues from '@atproto/api/dist/client/types/tools/ozone/set/getValues.js';
export * as ToolsOzoneSetQuerySets from '@atproto/api/dist/client/types/tools/ozone/set/querySets.js';
export * as ToolsOzoneSetUpsertSet from '@atproto/api/dist/client/types/tools/ozone/set/upsertSet.js';
export * as ToolsOzoneSettingDefs from '@atproto/api/dist/client/types/tools/ozone/setting/defs.js';
export * as ToolsOzoneSettingListOptions from '@atproto/api/dist/client/types/tools/ozone/setting/listOptions.js';
export * as ToolsOzoneSettingRemoveOptions from '@atproto/api/dist/client/types/tools/ozone/setting/removeOptions.js';
export * as ToolsOzoneSettingUpsertOption from '@atproto/api/dist/client/types/tools/ozone/setting/upsertOption.js';
export * as ToolsOzoneSignatureDefs from '@atproto/api/dist/client/types/tools/ozone/signature/defs.js';
export * as ToolsOzoneSignatureFindCorrelation from '@atproto/api/dist/client/types/tools/ozone/signature/findCorrelation.js';
export * as ToolsOzoneSignatureFindRelatedAccounts from '@atproto/api/dist/client/types/tools/ozone/signature/findRelatedAccounts.js';
export * as ToolsOzoneSignatureSearchAccounts from '@atproto/api/dist/client/types/tools/ozone/signature/searchAccounts.js';
export * as ToolsOzoneTeamAddMember from '@atproto/api/dist/client/types/tools/ozone/team/addMember.js';
export * as ToolsOzoneTeamDefs from '@atproto/api/dist/client/types/tools/ozone/team/defs.js';
export * as ToolsOzoneTeamDeleteMember from '@atproto/api/dist/client/types/tools/ozone/team/deleteMember.js';
export * as ToolsOzoneTeamListMembers from '@atproto/api/dist/client/types/tools/ozone/team/listMembers.js';
export * as ToolsOzoneTeamUpdateMember from '@atproto/api/dist/client/types/tools/ozone/team/updateMember.js';
export * as ToolsOzoneVerificationDefs from '@atproto/api/dist/client/types/tools/ozone/verification/defs.js';
export * as ToolsOzoneVerificationGrantVerifications from '@atproto/api/dist/client/types/tools/ozone/verification/grantVerifications.js';
export * as ToolsOzoneVerificationListVerifications from '@atproto/api/dist/client/types/tools/ozone/verification/listVerifications.js';
export * as ToolsOzoneVerificationRevokeVerifications from '@atproto/api/dist/client/types/tools/ozone/verification/revokeVerifications.js';
export declare const COM_ATPROTO_MODERATION: {
    DefsReasonSpam: string;
    DefsReasonViolation: string;
    DefsReasonMisleading: string;
    DefsReasonSexual: string;
    DefsReasonRude: string;
    DefsReasonOther: string;
    DefsReasonAppeal: string;
};
export declare const APP_BSKY_ACTOR: {
    StatusLive: string;
};
export declare const APP_BSKY_FEED: {
    DefsRequestLess: string;
    DefsRequestMore: string;
    DefsClickthroughItem: string;
    DefsClickthroughAuthor: string;
    DefsClickthroughReposter: string;
    DefsClickthroughEmbed: string;
    DefsContentModeUnspecified: string;
    DefsContentModeVideo: string;
    DefsInteractionSeen: string;
    DefsInteractionLike: string;
    DefsInteractionRepost: string;
    DefsInteractionReply: string;
    DefsInteractionQuote: string;
    DefsInteractionShare: string;
};
export declare const APP_BSKY_GRAPH: {
    DefsModlist: string;
    DefsCuratelist: string;
    DefsReferencelist: string;
};
export declare const TOOLS_OZONE_MODERATION: {
    DefsReviewOpen: string;
    DefsReviewEscalated: string;
    DefsReviewClosed: string;
    DefsReviewNone: string;
};
export declare const TOOLS_OZONE_TEAM: {
    DefsRoleAdmin: string;
    DefsRoleModerator: string;
    DefsRoleTriage: string;
    DefsRoleVerifier: string;
};
export declare class AtpBaseClient extends XrpcClient {
    com: ComNS;
    app: AppNS;
    chat: ChatNS;
    tools: ToolsNS;
    constructor(options: FetchHandler | FetchHandlerOptions);
    /** @deprecated use `this` instead */
    get xrpc(): XrpcClient;
}
export declare class ComNS {
    _client: XrpcClient;
    atproto: ComAtprotoNS;
    constructor(client: XrpcClient);
}
export declare class ComAtprotoNS {
    _client: XrpcClient;
    admin: ComAtprotoAdminNS;
    identity: ComAtprotoIdentityNS;
    label: ComAtprotoLabelNS;
    lexicon: ComAtprotoLexiconNS;
    moderation: ComAtprotoModerationNS;
    repo: ComAtprotoRepoNS;
    server: ComAtprotoServerNS;
    sync: ComAtprotoSyncNS;
    temp: ComAtprotoTempNS;
    constructor(client: XrpcClient);
}
export declare class ComAtprotoAdminNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    deleteAccount(data?: ComAtprotoAdminDeleteAccount.InputSchema, opts?: ComAtprotoAdminDeleteAccount.CallOptions): Promise<ComAtprotoAdminDeleteAccount.Response>;
    disableAccountInvites(data?: ComAtprotoAdminDisableAccountInvites.InputSchema, opts?: ComAtprotoAdminDisableAccountInvites.CallOptions): Promise<ComAtprotoAdminDisableAccountInvites.Response>;
    disableInviteCodes(data?: ComAtprotoAdminDisableInviteCodes.InputSchema, opts?: ComAtprotoAdminDisableInviteCodes.CallOptions): Promise<ComAtprotoAdminDisableInviteCodes.Response>;
    enableAccountInvites(data?: ComAtprotoAdminEnableAccountInvites.InputSchema, opts?: ComAtprotoAdminEnableAccountInvites.CallOptions): Promise<ComAtprotoAdminEnableAccountInvites.Response>;
    getAccountInfo(params?: ComAtprotoAdminGetAccountInfo.QueryParams, opts?: ComAtprotoAdminGetAccountInfo.CallOptions): Promise<ComAtprotoAdminGetAccountInfo.Response>;
    getAccountInfos(params?: ComAtprotoAdminGetAccountInfos.QueryParams, opts?: ComAtprotoAdminGetAccountInfos.CallOptions): Promise<ComAtprotoAdminGetAccountInfos.Response>;
    getInviteCodes(params?: ComAtprotoAdminGetInviteCodes.QueryParams, opts?: ComAtprotoAdminGetInviteCodes.CallOptions): Promise<ComAtprotoAdminGetInviteCodes.Response>;
    getSubjectStatus(params?: ComAtprotoAdminGetSubjectStatus.QueryParams, opts?: ComAtprotoAdminGetSubjectStatus.CallOptions): Promise<ComAtprotoAdminGetSubjectStatus.Response>;
    searchAccounts(params?: ComAtprotoAdminSearchAccounts.QueryParams, opts?: ComAtprotoAdminSearchAccounts.CallOptions): Promise<ComAtprotoAdminSearchAccounts.Response>;
    sendEmail(data?: ComAtprotoAdminSendEmail.InputSchema, opts?: ComAtprotoAdminSendEmail.CallOptions): Promise<ComAtprotoAdminSendEmail.Response>;
    updateAccountEmail(data?: ComAtprotoAdminUpdateAccountEmail.InputSchema, opts?: ComAtprotoAdminUpdateAccountEmail.CallOptions): Promise<ComAtprotoAdminUpdateAccountEmail.Response>;
    updateAccountHandle(data?: ComAtprotoAdminUpdateAccountHandle.InputSchema, opts?: ComAtprotoAdminUpdateAccountHandle.CallOptions): Promise<ComAtprotoAdminUpdateAccountHandle.Response>;
    updateAccountPassword(data?: ComAtprotoAdminUpdateAccountPassword.InputSchema, opts?: ComAtprotoAdminUpdateAccountPassword.CallOptions): Promise<ComAtprotoAdminUpdateAccountPassword.Response>;
    updateAccountSigningKey(data?: ComAtprotoAdminUpdateAccountSigningKey.InputSchema, opts?: ComAtprotoAdminUpdateAccountSigningKey.CallOptions): Promise<ComAtprotoAdminUpdateAccountSigningKey.Response>;
    updateSubjectStatus(data?: ComAtprotoAdminUpdateSubjectStatus.InputSchema, opts?: ComAtprotoAdminUpdateSubjectStatus.CallOptions): Promise<ComAtprotoAdminUpdateSubjectStatus.Response>;
}
export declare class ComAtprotoIdentityNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    getRecommendedDidCredentials(params?: ComAtprotoIdentityGetRecommendedDidCredentials.QueryParams, opts?: ComAtprotoIdentityGetRecommendedDidCredentials.CallOptions): Promise<ComAtprotoIdentityGetRecommendedDidCredentials.Response>;
    refreshIdentity(data?: ComAtprotoIdentityRefreshIdentity.InputSchema, opts?: ComAtprotoIdentityRefreshIdentity.CallOptions): Promise<ComAtprotoIdentityRefreshIdentity.Response>;
    requestPlcOperationSignature(data?: ComAtprotoIdentityRequestPlcOperationSignature.InputSchema, opts?: ComAtprotoIdentityRequestPlcOperationSignature.CallOptions): Promise<ComAtprotoIdentityRequestPlcOperationSignature.Response>;
    resolveDid(params?: ComAtprotoIdentityResolveDid.QueryParams, opts?: ComAtprotoIdentityResolveDid.CallOptions): Promise<ComAtprotoIdentityResolveDid.Response>;
    resolveHandle(params?: ComAtprotoIdentityResolveHandle.QueryParams, opts?: ComAtprotoIdentityResolveHandle.CallOptions): Promise<ComAtprotoIdentityResolveHandle.Response>;
    resolveIdentity(params?: ComAtprotoIdentityResolveIdentity.QueryParams, opts?: ComAtprotoIdentityResolveIdentity.CallOptions): Promise<ComAtprotoIdentityResolveIdentity.Response>;
    signPlcOperation(data?: ComAtprotoIdentitySignPlcOperation.InputSchema, opts?: ComAtprotoIdentitySignPlcOperation.CallOptions): Promise<ComAtprotoIdentitySignPlcOperation.Response>;
    submitPlcOperation(data?: ComAtprotoIdentitySubmitPlcOperation.InputSchema, opts?: ComAtprotoIdentitySubmitPlcOperation.CallOptions): Promise<ComAtprotoIdentitySubmitPlcOperation.Response>;
    updateHandle(data?: ComAtprotoIdentityUpdateHandle.InputSchema, opts?: ComAtprotoIdentityUpdateHandle.CallOptions): Promise<ComAtprotoIdentityUpdateHandle.Response>;
}
export declare class ComAtprotoLabelNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    queryLabels(params?: ComAtprotoLabelQueryLabels.QueryParams, opts?: ComAtprotoLabelQueryLabels.CallOptions): Promise<ComAtprotoLabelQueryLabels.Response>;
}
export declare class ComAtprotoLexiconNS {
    _client: XrpcClient;
    schema: ComAtprotoLexiconSchemaRecord;
    constructor(client: XrpcClient);
}
export declare class ComAtprotoLexiconSchemaRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: ComAtprotoLexiconSchema.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: ComAtprotoLexiconSchema.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<ComAtprotoLexiconSchema.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<ComAtprotoLexiconSchema.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class ComAtprotoModerationNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    createReport(data?: ComAtprotoModerationCreateReport.InputSchema, opts?: ComAtprotoModerationCreateReport.CallOptions): Promise<ComAtprotoModerationCreateReport.Response>;
}
export declare class ComAtprotoRepoNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    applyWrites(data?: ComAtprotoRepoApplyWrites.InputSchema, opts?: ComAtprotoRepoApplyWrites.CallOptions): Promise<ComAtprotoRepoApplyWrites.Response>;
    createRecord(data?: ComAtprotoRepoCreateRecord.InputSchema, opts?: ComAtprotoRepoCreateRecord.CallOptions): Promise<ComAtprotoRepoCreateRecord.Response>;
    deleteRecord(data?: ComAtprotoRepoDeleteRecord.InputSchema, opts?: ComAtprotoRepoDeleteRecord.CallOptions): Promise<ComAtprotoRepoDeleteRecord.Response>;
    describeRepo(params?: ComAtprotoRepoDescribeRepo.QueryParams, opts?: ComAtprotoRepoDescribeRepo.CallOptions): Promise<ComAtprotoRepoDescribeRepo.Response>;
    getRecord(params?: ComAtprotoRepoGetRecord.QueryParams, opts?: ComAtprotoRepoGetRecord.CallOptions): Promise<ComAtprotoRepoGetRecord.Response>;
    importRepo(data?: ComAtprotoRepoImportRepo.InputSchema, opts?: ComAtprotoRepoImportRepo.CallOptions): Promise<ComAtprotoRepoImportRepo.Response>;
    listMissingBlobs(params?: ComAtprotoRepoListMissingBlobs.QueryParams, opts?: ComAtprotoRepoListMissingBlobs.CallOptions): Promise<ComAtprotoRepoListMissingBlobs.Response>;
    listRecords(params?: ComAtprotoRepoListRecords.QueryParams, opts?: ComAtprotoRepoListRecords.CallOptions): Promise<ComAtprotoRepoListRecords.Response>;
    putRecord(data?: ComAtprotoRepoPutRecord.InputSchema, opts?: ComAtprotoRepoPutRecord.CallOptions): Promise<ComAtprotoRepoPutRecord.Response>;
    uploadBlob(data?: ComAtprotoRepoUploadBlob.InputSchema, opts?: ComAtprotoRepoUploadBlob.CallOptions): Promise<ComAtprotoRepoUploadBlob.Response>;
}
export declare class ComAtprotoServerNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    activateAccount(data?: ComAtprotoServerActivateAccount.InputSchema, opts?: ComAtprotoServerActivateAccount.CallOptions): Promise<ComAtprotoServerActivateAccount.Response>;
    checkAccountStatus(params?: ComAtprotoServerCheckAccountStatus.QueryParams, opts?: ComAtprotoServerCheckAccountStatus.CallOptions): Promise<ComAtprotoServerCheckAccountStatus.Response>;
    confirmEmail(data?: ComAtprotoServerConfirmEmail.InputSchema, opts?: ComAtprotoServerConfirmEmail.CallOptions): Promise<ComAtprotoServerConfirmEmail.Response>;
    createAccount(data?: ComAtprotoServerCreateAccount.InputSchema, opts?: ComAtprotoServerCreateAccount.CallOptions): Promise<ComAtprotoServerCreateAccount.Response>;
    createAppPassword(data?: ComAtprotoServerCreateAppPassword.InputSchema, opts?: ComAtprotoServerCreateAppPassword.CallOptions): Promise<ComAtprotoServerCreateAppPassword.Response>;
    createInviteCode(data?: ComAtprotoServerCreateInviteCode.InputSchema, opts?: ComAtprotoServerCreateInviteCode.CallOptions): Promise<ComAtprotoServerCreateInviteCode.Response>;
    createInviteCodes(data?: ComAtprotoServerCreateInviteCodes.InputSchema, opts?: ComAtprotoServerCreateInviteCodes.CallOptions): Promise<ComAtprotoServerCreateInviteCodes.Response>;
    createSession(data?: ComAtprotoServerCreateSession.InputSchema, opts?: ComAtprotoServerCreateSession.CallOptions): Promise<ComAtprotoServerCreateSession.Response>;
    deactivateAccount(data?: ComAtprotoServerDeactivateAccount.InputSchema, opts?: ComAtprotoServerDeactivateAccount.CallOptions): Promise<ComAtprotoServerDeactivateAccount.Response>;
    deleteAccount(data?: ComAtprotoServerDeleteAccount.InputSchema, opts?: ComAtprotoServerDeleteAccount.CallOptions): Promise<ComAtprotoServerDeleteAccount.Response>;
    deleteSession(data?: ComAtprotoServerDeleteSession.InputSchema, opts?: ComAtprotoServerDeleteSession.CallOptions): Promise<ComAtprotoServerDeleteSession.Response>;
    describeServer(params?: ComAtprotoServerDescribeServer.QueryParams, opts?: ComAtprotoServerDescribeServer.CallOptions): Promise<ComAtprotoServerDescribeServer.Response>;
    getAccountInviteCodes(params?: ComAtprotoServerGetAccountInviteCodes.QueryParams, opts?: ComAtprotoServerGetAccountInviteCodes.CallOptions): Promise<ComAtprotoServerGetAccountInviteCodes.Response>;
    getServiceAuth(params?: ComAtprotoServerGetServiceAuth.QueryParams, opts?: ComAtprotoServerGetServiceAuth.CallOptions): Promise<ComAtprotoServerGetServiceAuth.Response>;
    getSession(params?: ComAtprotoServerGetSession.QueryParams, opts?: ComAtprotoServerGetSession.CallOptions): Promise<ComAtprotoServerGetSession.Response>;
    listAppPasswords(params?: ComAtprotoServerListAppPasswords.QueryParams, opts?: ComAtprotoServerListAppPasswords.CallOptions): Promise<ComAtprotoServerListAppPasswords.Response>;
    refreshSession(data?: ComAtprotoServerRefreshSession.InputSchema, opts?: ComAtprotoServerRefreshSession.CallOptions): Promise<ComAtprotoServerRefreshSession.Response>;
    requestAccountDelete(data?: ComAtprotoServerRequestAccountDelete.InputSchema, opts?: ComAtprotoServerRequestAccountDelete.CallOptions): Promise<ComAtprotoServerRequestAccountDelete.Response>;
    requestEmailConfirmation(data?: ComAtprotoServerRequestEmailConfirmation.InputSchema, opts?: ComAtprotoServerRequestEmailConfirmation.CallOptions): Promise<ComAtprotoServerRequestEmailConfirmation.Response>;
    requestEmailUpdate(data?: ComAtprotoServerRequestEmailUpdate.InputSchema, opts?: ComAtprotoServerRequestEmailUpdate.CallOptions): Promise<ComAtprotoServerRequestEmailUpdate.Response>;
    requestPasswordReset(data?: ComAtprotoServerRequestPasswordReset.InputSchema, opts?: ComAtprotoServerRequestPasswordReset.CallOptions): Promise<ComAtprotoServerRequestPasswordReset.Response>;
    reserveSigningKey(data?: ComAtprotoServerReserveSigningKey.InputSchema, opts?: ComAtprotoServerReserveSigningKey.CallOptions): Promise<ComAtprotoServerReserveSigningKey.Response>;
    resetPassword(data?: ComAtprotoServerResetPassword.InputSchema, opts?: ComAtprotoServerResetPassword.CallOptions): Promise<ComAtprotoServerResetPassword.Response>;
    revokeAppPassword(data?: ComAtprotoServerRevokeAppPassword.InputSchema, opts?: ComAtprotoServerRevokeAppPassword.CallOptions): Promise<ComAtprotoServerRevokeAppPassword.Response>;
    updateEmail(data?: ComAtprotoServerUpdateEmail.InputSchema, opts?: ComAtprotoServerUpdateEmail.CallOptions): Promise<ComAtprotoServerUpdateEmail.Response>;
}
export declare class ComAtprotoSyncNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    getBlob(params?: ComAtprotoSyncGetBlob.QueryParams, opts?: ComAtprotoSyncGetBlob.CallOptions): Promise<ComAtprotoSyncGetBlob.Response>;
    getBlocks(params?: ComAtprotoSyncGetBlocks.QueryParams, opts?: ComAtprotoSyncGetBlocks.CallOptions): Promise<ComAtprotoSyncGetBlocks.Response>;
    getCheckout(params?: ComAtprotoSyncGetCheckout.QueryParams, opts?: ComAtprotoSyncGetCheckout.CallOptions): Promise<ComAtprotoSyncGetCheckout.Response>;
    getHead(params?: ComAtprotoSyncGetHead.QueryParams, opts?: ComAtprotoSyncGetHead.CallOptions): Promise<ComAtprotoSyncGetHead.Response>;
    getHostStatus(params?: ComAtprotoSyncGetHostStatus.QueryParams, opts?: ComAtprotoSyncGetHostStatus.CallOptions): Promise<ComAtprotoSyncGetHostStatus.Response>;
    getLatestCommit(params?: ComAtprotoSyncGetLatestCommit.QueryParams, opts?: ComAtprotoSyncGetLatestCommit.CallOptions): Promise<ComAtprotoSyncGetLatestCommit.Response>;
    getRecord(params?: ComAtprotoSyncGetRecord.QueryParams, opts?: ComAtprotoSyncGetRecord.CallOptions): Promise<ComAtprotoSyncGetRecord.Response>;
    getRepo(params?: ComAtprotoSyncGetRepo.QueryParams, opts?: ComAtprotoSyncGetRepo.CallOptions): Promise<ComAtprotoSyncGetRepo.Response>;
    getRepoStatus(params?: ComAtprotoSyncGetRepoStatus.QueryParams, opts?: ComAtprotoSyncGetRepoStatus.CallOptions): Promise<ComAtprotoSyncGetRepoStatus.Response>;
    listBlobs(params?: ComAtprotoSyncListBlobs.QueryParams, opts?: ComAtprotoSyncListBlobs.CallOptions): Promise<ComAtprotoSyncListBlobs.Response>;
    listHosts(params?: ComAtprotoSyncListHosts.QueryParams, opts?: ComAtprotoSyncListHosts.CallOptions): Promise<ComAtprotoSyncListHosts.Response>;
    listRepos(params?: ComAtprotoSyncListRepos.QueryParams, opts?: ComAtprotoSyncListRepos.CallOptions): Promise<ComAtprotoSyncListRepos.Response>;
    listReposByCollection(params?: ComAtprotoSyncListReposByCollection.QueryParams, opts?: ComAtprotoSyncListReposByCollection.CallOptions): Promise<ComAtprotoSyncListReposByCollection.Response>;
    notifyOfUpdate(data?: ComAtprotoSyncNotifyOfUpdate.InputSchema, opts?: ComAtprotoSyncNotifyOfUpdate.CallOptions): Promise<ComAtprotoSyncNotifyOfUpdate.Response>;
    requestCrawl(data?: ComAtprotoSyncRequestCrawl.InputSchema, opts?: ComAtprotoSyncRequestCrawl.CallOptions): Promise<ComAtprotoSyncRequestCrawl.Response>;
}
export declare class ComAtprotoTempNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    addReservedHandle(data?: ComAtprotoTempAddReservedHandle.InputSchema, opts?: ComAtprotoTempAddReservedHandle.CallOptions): Promise<ComAtprotoTempAddReservedHandle.Response>;
    checkSignupQueue(params?: ComAtprotoTempCheckSignupQueue.QueryParams, opts?: ComAtprotoTempCheckSignupQueue.CallOptions): Promise<ComAtprotoTempCheckSignupQueue.Response>;
    fetchLabels(params?: ComAtprotoTempFetchLabels.QueryParams, opts?: ComAtprotoTempFetchLabels.CallOptions): Promise<ComAtprotoTempFetchLabels.Response>;
    requestPhoneVerification(data?: ComAtprotoTempRequestPhoneVerification.InputSchema, opts?: ComAtprotoTempRequestPhoneVerification.CallOptions): Promise<ComAtprotoTempRequestPhoneVerification.Response>;
}
export declare class AppNS {
    _client: XrpcClient;
    bsky: AppBskyNS;
    constructor(client: XrpcClient);
}
export declare class AppBskyNS {
    _client: XrpcClient;
    actor: AppBskyActorNS;
    embed: AppBskyEmbedNS;
    feed: AppBskyFeedNS;
    graph: AppBskyGraphNS;
    labeler: AppBskyLabelerNS;
    notification: AppBskyNotificationNS;
    richtext: AppBskyRichtextNS;
    unspecced: AppBskyUnspeccedNS;
    video: AppBskyVideoNS;
    constructor(client: XrpcClient);
}
export declare class AppBskyActorNS {
    _client: XrpcClient;
    profile: AppBskyActorProfileRecord;
    status: AppBskyActorStatusRecord;
    constructor(client: XrpcClient);
    getPreferences(params?: AppBskyActorGetPreferences.QueryParams, opts?: AppBskyActorGetPreferences.CallOptions): Promise<AppBskyActorGetPreferences.Response>;
    getProfile(params?: AppBskyActorGetProfile.QueryParams, opts?: AppBskyActorGetProfile.CallOptions): Promise<AppBskyActorGetProfile.Response>;
    getProfiles(params?: AppBskyActorGetProfiles.QueryParams, opts?: AppBskyActorGetProfiles.CallOptions): Promise<AppBskyActorGetProfiles.Response>;
    getSuggestions(params?: AppBskyActorGetSuggestions.QueryParams, opts?: AppBskyActorGetSuggestions.CallOptions): Promise<AppBskyActorGetSuggestions.Response>;
    putPreferences(data?: AppBskyActorPutPreferences.InputSchema, opts?: AppBskyActorPutPreferences.CallOptions): Promise<AppBskyActorPutPreferences.Response>;
    searchActors(params?: AppBskyActorSearchActors.QueryParams, opts?: AppBskyActorSearchActors.CallOptions): Promise<AppBskyActorSearchActors.Response>;
    searchActorsTypeahead(params?: AppBskyActorSearchActorsTypeahead.QueryParams, opts?: AppBskyActorSearchActorsTypeahead.CallOptions): Promise<AppBskyActorSearchActorsTypeahead.Response>;
}
export declare class AppBskyActorProfileRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyActorProfile.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyActorProfile.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyActorProfile.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyActorProfile.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyActorStatusRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyActorStatus.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyActorStatus.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyActorStatus.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyActorStatus.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyEmbedNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
}
export declare class AppBskyFeedNS {
    _client: XrpcClient;
    generator: AppBskyFeedGeneratorRecord;
    like: AppBskyFeedLikeRecord;
    post: AppBskyFeedPostRecord;
    postgate: AppBskyFeedPostgateRecord;
    repost: AppBskyFeedRepostRecord;
    threadgate: AppBskyFeedThreadgateRecord;
    constructor(client: XrpcClient);
    describeFeedGenerator(params?: AppBskyFeedDescribeFeedGenerator.QueryParams, opts?: AppBskyFeedDescribeFeedGenerator.CallOptions): Promise<AppBskyFeedDescribeFeedGenerator.Response>;
    getActorFeeds(params?: AppBskyFeedGetActorFeeds.QueryParams, opts?: AppBskyFeedGetActorFeeds.CallOptions): Promise<AppBskyFeedGetActorFeeds.Response>;
    getActorLikes(params?: AppBskyFeedGetActorLikes.QueryParams, opts?: AppBskyFeedGetActorLikes.CallOptions): Promise<AppBskyFeedGetActorLikes.Response>;
    getAuthorFeed(params?: AppBskyFeedGetAuthorFeed.QueryParams, opts?: AppBskyFeedGetAuthorFeed.CallOptions): Promise<AppBskyFeedGetAuthorFeed.Response>;
    getFeed(params?: AppBskyFeedGetFeed.QueryParams, opts?: AppBskyFeedGetFeed.CallOptions): Promise<AppBskyFeedGetFeed.Response>;
    getFeedGenerator(params?: AppBskyFeedGetFeedGenerator.QueryParams, opts?: AppBskyFeedGetFeedGenerator.CallOptions): Promise<AppBskyFeedGetFeedGenerator.Response>;
    getFeedGenerators(params?: AppBskyFeedGetFeedGenerators.QueryParams, opts?: AppBskyFeedGetFeedGenerators.CallOptions): Promise<AppBskyFeedGetFeedGenerators.Response>;
    getFeedSkeleton(params?: AppBskyFeedGetFeedSkeleton.QueryParams, opts?: AppBskyFeedGetFeedSkeleton.CallOptions): Promise<AppBskyFeedGetFeedSkeleton.Response>;
    getLikes(params?: AppBskyFeedGetLikes.QueryParams, opts?: AppBskyFeedGetLikes.CallOptions): Promise<AppBskyFeedGetLikes.Response>;
    getListFeed(params?: AppBskyFeedGetListFeed.QueryParams, opts?: AppBskyFeedGetListFeed.CallOptions): Promise<AppBskyFeedGetListFeed.Response>;
    getPostThread(params?: AppBskyFeedGetPostThread.QueryParams, opts?: AppBskyFeedGetPostThread.CallOptions): Promise<AppBskyFeedGetPostThread.Response>;
    getPosts(params?: AppBskyFeedGetPosts.QueryParams, opts?: AppBskyFeedGetPosts.CallOptions): Promise<AppBskyFeedGetPosts.Response>;
    getQuotes(params?: AppBskyFeedGetQuotes.QueryParams, opts?: AppBskyFeedGetQuotes.CallOptions): Promise<AppBskyFeedGetQuotes.Response>;
    getRepostedBy(params?: AppBskyFeedGetRepostedBy.QueryParams, opts?: AppBskyFeedGetRepostedBy.CallOptions): Promise<AppBskyFeedGetRepostedBy.Response>;
    getSuggestedFeeds(params?: AppBskyFeedGetSuggestedFeeds.QueryParams, opts?: AppBskyFeedGetSuggestedFeeds.CallOptions): Promise<AppBskyFeedGetSuggestedFeeds.Response>;
    getTimeline(params?: AppBskyFeedGetTimeline.QueryParams, opts?: AppBskyFeedGetTimeline.CallOptions): Promise<AppBskyFeedGetTimeline.Response>;
    searchPosts(params?: AppBskyFeedSearchPosts.QueryParams, opts?: AppBskyFeedSearchPosts.CallOptions): Promise<AppBskyFeedSearchPosts.Response>;
    sendInteractions(data?: AppBskyFeedSendInteractions.InputSchema, opts?: AppBskyFeedSendInteractions.CallOptions): Promise<AppBskyFeedSendInteractions.Response>;
}
export declare class AppBskyFeedGeneratorRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyFeedGenerator.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyFeedGenerator.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyFeedGenerator.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyFeedGenerator.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyFeedLikeRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyFeedLike.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyFeedLike.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyFeedLike.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyFeedLike.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyFeedPostRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyFeedPost.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyFeedPost.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyFeedPost.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyFeedPost.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyFeedPostgateRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyFeedPostgate.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyFeedPostgate.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyFeedPostgate.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyFeedPostgate.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyFeedRepostRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyFeedRepost.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyFeedRepost.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyFeedRepost.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyFeedRepost.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyFeedThreadgateRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyFeedThreadgate.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyFeedThreadgate.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyFeedThreadgate.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyFeedThreadgate.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyGraphNS {
    _client: XrpcClient;
    block: AppBskyGraphBlockRecord;
    follow: AppBskyGraphFollowRecord;
    list: AppBskyGraphListRecord;
    listblock: AppBskyGraphListblockRecord;
    listitem: AppBskyGraphListitemRecord;
    starterpack: AppBskyGraphStarterpackRecord;
    verification: AppBskyGraphVerificationRecord;
    constructor(client: XrpcClient);
    getActorStarterPacks(params?: AppBskyGraphGetActorStarterPacks.QueryParams, opts?: AppBskyGraphGetActorStarterPacks.CallOptions): Promise<AppBskyGraphGetActorStarterPacks.Response>;
    getBlocks(params?: AppBskyGraphGetBlocks.QueryParams, opts?: AppBskyGraphGetBlocks.CallOptions): Promise<AppBskyGraphGetBlocks.Response>;
    getFollowers(params?: AppBskyGraphGetFollowers.QueryParams, opts?: AppBskyGraphGetFollowers.CallOptions): Promise<AppBskyGraphGetFollowers.Response>;
    getFollows(params?: AppBskyGraphGetFollows.QueryParams, opts?: AppBskyGraphGetFollows.CallOptions): Promise<AppBskyGraphGetFollows.Response>;
    getKnownFollowers(params?: AppBskyGraphGetKnownFollowers.QueryParams, opts?: AppBskyGraphGetKnownFollowers.CallOptions): Promise<AppBskyGraphGetKnownFollowers.Response>;
    getList(params?: AppBskyGraphGetList.QueryParams, opts?: AppBskyGraphGetList.CallOptions): Promise<AppBskyGraphGetList.Response>;
    getListBlocks(params?: AppBskyGraphGetListBlocks.QueryParams, opts?: AppBskyGraphGetListBlocks.CallOptions): Promise<AppBskyGraphGetListBlocks.Response>;
    getListMutes(params?: AppBskyGraphGetListMutes.QueryParams, opts?: AppBskyGraphGetListMutes.CallOptions): Promise<AppBskyGraphGetListMutes.Response>;
    getLists(params?: AppBskyGraphGetLists.QueryParams, opts?: AppBskyGraphGetLists.CallOptions): Promise<AppBskyGraphGetLists.Response>;
    getMutes(params?: AppBskyGraphGetMutes.QueryParams, opts?: AppBskyGraphGetMutes.CallOptions): Promise<AppBskyGraphGetMutes.Response>;
    getRelationships(params?: AppBskyGraphGetRelationships.QueryParams, opts?: AppBskyGraphGetRelationships.CallOptions): Promise<AppBskyGraphGetRelationships.Response>;
    getStarterPack(params?: AppBskyGraphGetStarterPack.QueryParams, opts?: AppBskyGraphGetStarterPack.CallOptions): Promise<AppBskyGraphGetStarterPack.Response>;
    getStarterPacks(params?: AppBskyGraphGetStarterPacks.QueryParams, opts?: AppBskyGraphGetStarterPacks.CallOptions): Promise<AppBskyGraphGetStarterPacks.Response>;
    getSuggestedFollowsByActor(params?: AppBskyGraphGetSuggestedFollowsByActor.QueryParams, opts?: AppBskyGraphGetSuggestedFollowsByActor.CallOptions): Promise<AppBskyGraphGetSuggestedFollowsByActor.Response>;
    muteActor(data?: AppBskyGraphMuteActor.InputSchema, opts?: AppBskyGraphMuteActor.CallOptions): Promise<AppBskyGraphMuteActor.Response>;
    muteActorList(data?: AppBskyGraphMuteActorList.InputSchema, opts?: AppBskyGraphMuteActorList.CallOptions): Promise<AppBskyGraphMuteActorList.Response>;
    muteThread(data?: AppBskyGraphMuteThread.InputSchema, opts?: AppBskyGraphMuteThread.CallOptions): Promise<AppBskyGraphMuteThread.Response>;
    searchStarterPacks(params?: AppBskyGraphSearchStarterPacks.QueryParams, opts?: AppBskyGraphSearchStarterPacks.CallOptions): Promise<AppBskyGraphSearchStarterPacks.Response>;
    unmuteActor(data?: AppBskyGraphUnmuteActor.InputSchema, opts?: AppBskyGraphUnmuteActor.CallOptions): Promise<AppBskyGraphUnmuteActor.Response>;
    unmuteActorList(data?: AppBskyGraphUnmuteActorList.InputSchema, opts?: AppBskyGraphUnmuteActorList.CallOptions): Promise<AppBskyGraphUnmuteActorList.Response>;
    unmuteThread(data?: AppBskyGraphUnmuteThread.InputSchema, opts?: AppBskyGraphUnmuteThread.CallOptions): Promise<AppBskyGraphUnmuteThread.Response>;
}
export declare class AppBskyGraphBlockRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyGraphBlock.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyGraphBlock.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyGraphBlock.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyGraphBlock.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyGraphFollowRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyGraphFollow.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyGraphFollow.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyGraphFollow.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyGraphFollow.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyGraphListRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyGraphList.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyGraphList.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyGraphList.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyGraphList.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyGraphListblockRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyGraphListblock.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyGraphListblock.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyGraphListblock.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyGraphListblock.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyGraphListitemRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyGraphListitem.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyGraphListitem.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyGraphListitem.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyGraphListitem.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyGraphStarterpackRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyGraphStarterpack.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyGraphStarterpack.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyGraphStarterpack.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyGraphStarterpack.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyGraphVerificationRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyGraphVerification.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyGraphVerification.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyGraphVerification.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyGraphVerification.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyLabelerNS {
    _client: XrpcClient;
    service: AppBskyLabelerServiceRecord;
    constructor(client: XrpcClient);
    getServices(params?: AppBskyLabelerGetServices.QueryParams, opts?: AppBskyLabelerGetServices.CallOptions): Promise<AppBskyLabelerGetServices.Response>;
}
export declare class AppBskyLabelerServiceRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyLabelerService.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyLabelerService.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyLabelerService.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyLabelerService.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyNotificationNS {
    _client: XrpcClient;
    declaration: AppBskyNotificationDeclarationRecord;
    constructor(client: XrpcClient);
    getPreferences(params?: AppBskyNotificationGetPreferences.QueryParams, opts?: AppBskyNotificationGetPreferences.CallOptions): Promise<AppBskyNotificationGetPreferences.Response>;
    getUnreadCount(params?: AppBskyNotificationGetUnreadCount.QueryParams, opts?: AppBskyNotificationGetUnreadCount.CallOptions): Promise<AppBskyNotificationGetUnreadCount.Response>;
    listActivitySubscriptions(params?: AppBskyNotificationListActivitySubscriptions.QueryParams, opts?: AppBskyNotificationListActivitySubscriptions.CallOptions): Promise<AppBskyNotificationListActivitySubscriptions.Response>;
    listNotifications(params?: AppBskyNotificationListNotifications.QueryParams, opts?: AppBskyNotificationListNotifications.CallOptions): Promise<AppBskyNotificationListNotifications.Response>;
    putActivitySubscription(data?: AppBskyNotificationPutActivitySubscription.InputSchema, opts?: AppBskyNotificationPutActivitySubscription.CallOptions): Promise<AppBskyNotificationPutActivitySubscription.Response>;
    putPreferences(data?: AppBskyNotificationPutPreferences.InputSchema, opts?: AppBskyNotificationPutPreferences.CallOptions): Promise<AppBskyNotificationPutPreferences.Response>;
    putPreferencesV2(data?: AppBskyNotificationPutPreferencesV2.InputSchema, opts?: AppBskyNotificationPutPreferencesV2.CallOptions): Promise<AppBskyNotificationPutPreferencesV2.Response>;
    registerPush(data?: AppBskyNotificationRegisterPush.InputSchema, opts?: AppBskyNotificationRegisterPush.CallOptions): Promise<AppBskyNotificationRegisterPush.Response>;
    updateSeen(data?: AppBskyNotificationUpdateSeen.InputSchema, opts?: AppBskyNotificationUpdateSeen.CallOptions): Promise<AppBskyNotificationUpdateSeen.Response>;
}
export declare class AppBskyNotificationDeclarationRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: AppBskyNotificationDeclaration.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: AppBskyNotificationDeclaration.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyNotificationDeclaration.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<AppBskyNotificationDeclaration.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class AppBskyRichtextNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
}
export declare class AppBskyUnspeccedNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    getAgeAssuranceState(params?: AppBskyUnspeccedGetAgeAssuranceState.QueryParams, opts?: AppBskyUnspeccedGetAgeAssuranceState.CallOptions): Promise<AppBskyUnspeccedGetAgeAssuranceState.Response>;
    getConfig(params?: AppBskyUnspeccedGetConfig.QueryParams, opts?: AppBskyUnspeccedGetConfig.CallOptions): Promise<AppBskyUnspeccedGetConfig.Response>;
    getPopularFeedGenerators(params?: AppBskyUnspeccedGetPopularFeedGenerators.QueryParams, opts?: AppBskyUnspeccedGetPopularFeedGenerators.CallOptions): Promise<AppBskyUnspeccedGetPopularFeedGenerators.Response>;
    getPostThreadOtherV2(params?: AppBskyUnspeccedGetPostThreadOtherV2.QueryParams, opts?: AppBskyUnspeccedGetPostThreadOtherV2.CallOptions): Promise<AppBskyUnspeccedGetPostThreadOtherV2.Response>;
    getPostThreadV2(params?: AppBskyUnspeccedGetPostThreadV2.QueryParams, opts?: AppBskyUnspeccedGetPostThreadV2.CallOptions): Promise<AppBskyUnspeccedGetPostThreadV2.Response>;
    getSuggestedFeeds(params?: AppBskyUnspeccedGetSuggestedFeeds.QueryParams, opts?: AppBskyUnspeccedGetSuggestedFeeds.CallOptions): Promise<AppBskyUnspeccedGetSuggestedFeeds.Response>;
    getSuggestedFeedsSkeleton(params?: AppBskyUnspeccedGetSuggestedFeedsSkeleton.QueryParams, opts?: AppBskyUnspeccedGetSuggestedFeedsSkeleton.CallOptions): Promise<AppBskyUnspeccedGetSuggestedFeedsSkeleton.Response>;
    getSuggestedStarterPacks(params?: AppBskyUnspeccedGetSuggestedStarterPacks.QueryParams, opts?: AppBskyUnspeccedGetSuggestedStarterPacks.CallOptions): Promise<AppBskyUnspeccedGetSuggestedStarterPacks.Response>;
    getSuggestedStarterPacksSkeleton(params?: AppBskyUnspeccedGetSuggestedStarterPacksSkeleton.QueryParams, opts?: AppBskyUnspeccedGetSuggestedStarterPacksSkeleton.CallOptions): Promise<AppBskyUnspeccedGetSuggestedStarterPacksSkeleton.Response>;
    getSuggestedUsers(params?: AppBskyUnspeccedGetSuggestedUsers.QueryParams, opts?: AppBskyUnspeccedGetSuggestedUsers.CallOptions): Promise<AppBskyUnspeccedGetSuggestedUsers.Response>;
    getSuggestedUsersSkeleton(params?: AppBskyUnspeccedGetSuggestedUsersSkeleton.QueryParams, opts?: AppBskyUnspeccedGetSuggestedUsersSkeleton.CallOptions): Promise<AppBskyUnspeccedGetSuggestedUsersSkeleton.Response>;
    getSuggestionsSkeleton(params?: AppBskyUnspeccedGetSuggestionsSkeleton.QueryParams, opts?: AppBskyUnspeccedGetSuggestionsSkeleton.CallOptions): Promise<AppBskyUnspeccedGetSuggestionsSkeleton.Response>;
    getTaggedSuggestions(params?: AppBskyUnspeccedGetTaggedSuggestions.QueryParams, opts?: AppBskyUnspeccedGetTaggedSuggestions.CallOptions): Promise<AppBskyUnspeccedGetTaggedSuggestions.Response>;
    getTrendingTopics(params?: AppBskyUnspeccedGetTrendingTopics.QueryParams, opts?: AppBskyUnspeccedGetTrendingTopics.CallOptions): Promise<AppBskyUnspeccedGetTrendingTopics.Response>;
    getTrends(params?: AppBskyUnspeccedGetTrends.QueryParams, opts?: AppBskyUnspeccedGetTrends.CallOptions): Promise<AppBskyUnspeccedGetTrends.Response>;
    getTrendsSkeleton(params?: AppBskyUnspeccedGetTrendsSkeleton.QueryParams, opts?: AppBskyUnspeccedGetTrendsSkeleton.CallOptions): Promise<AppBskyUnspeccedGetTrendsSkeleton.Response>;
    initAgeAssurance(data?: AppBskyUnspeccedInitAgeAssurance.InputSchema, opts?: AppBskyUnspeccedInitAgeAssurance.CallOptions): Promise<AppBskyUnspeccedInitAgeAssurance.Response>;
    searchActorsSkeleton(params?: AppBskyUnspeccedSearchActorsSkeleton.QueryParams, opts?: AppBskyUnspeccedSearchActorsSkeleton.CallOptions): Promise<AppBskyUnspeccedSearchActorsSkeleton.Response>;
    searchPostsSkeleton(params?: AppBskyUnspeccedSearchPostsSkeleton.QueryParams, opts?: AppBskyUnspeccedSearchPostsSkeleton.CallOptions): Promise<AppBskyUnspeccedSearchPostsSkeleton.Response>;
    searchStarterPacksSkeleton(params?: AppBskyUnspeccedSearchStarterPacksSkeleton.QueryParams, opts?: AppBskyUnspeccedSearchStarterPacksSkeleton.CallOptions): Promise<AppBskyUnspeccedSearchStarterPacksSkeleton.Response>;
}
export declare class AppBskyVideoNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    getJobStatus(params?: AppBskyVideoGetJobStatus.QueryParams, opts?: AppBskyVideoGetJobStatus.CallOptions): Promise<AppBskyVideoGetJobStatus.Response>;
    getUploadLimits(params?: AppBskyVideoGetUploadLimits.QueryParams, opts?: AppBskyVideoGetUploadLimits.CallOptions): Promise<AppBskyVideoGetUploadLimits.Response>;
    uploadVideo(data?: AppBskyVideoUploadVideo.InputSchema, opts?: AppBskyVideoUploadVideo.CallOptions): Promise<AppBskyVideoUploadVideo.Response>;
}
export declare class ChatNS {
    _client: XrpcClient;
    bsky: ChatBskyNS;
    constructor(client: XrpcClient);
}
export declare class ChatBskyNS {
    _client: XrpcClient;
    actor: ChatBskyActorNS;
    convo: ChatBskyConvoNS;
    moderation: ChatBskyModerationNS;
    constructor(client: XrpcClient);
}
export declare class ChatBskyActorNS {
    _client: XrpcClient;
    declaration: ChatBskyActorDeclarationRecord;
    constructor(client: XrpcClient);
    deleteAccount(data?: ChatBskyActorDeleteAccount.InputSchema, opts?: ChatBskyActorDeleteAccount.CallOptions): Promise<ChatBskyActorDeleteAccount.Response>;
    exportAccountData(params?: ChatBskyActorExportAccountData.QueryParams, opts?: ChatBskyActorExportAccountData.CallOptions): Promise<ChatBskyActorExportAccountData.Response>;
}
export declare class ChatBskyActorDeclarationRecord {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    list(params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>): Promise<{
        cursor?: string;
        records: {
            uri: string;
            value: ChatBskyActorDeclaration.Record;
        }[];
    }>;
    get(params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>): Promise<{
        uri: string;
        cid: string;
        value: ChatBskyActorDeclaration.Record;
    }>;
    create(params: OmitKey<ComAtprotoRepoCreateRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<ChatBskyActorDeclaration.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    put(params: OmitKey<ComAtprotoRepoPutRecord.InputSchema, 'collection' | 'record'>, record: Un$Typed<ChatBskyActorDeclaration.Record>, headers?: Record<string, string>): Promise<{
        uri: string;
        cid: string;
    }>;
    delete(params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>, headers?: Record<string, string>): Promise<void>;
}
export declare class ChatBskyConvoNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    acceptConvo(data?: ChatBskyConvoAcceptConvo.InputSchema, opts?: ChatBskyConvoAcceptConvo.CallOptions): Promise<ChatBskyConvoAcceptConvo.Response>;
    addReaction(data?: ChatBskyConvoAddReaction.InputSchema, opts?: ChatBskyConvoAddReaction.CallOptions): Promise<ChatBskyConvoAddReaction.Response>;
    deleteMessageForSelf(data?: ChatBskyConvoDeleteMessageForSelf.InputSchema, opts?: ChatBskyConvoDeleteMessageForSelf.CallOptions): Promise<ChatBskyConvoDeleteMessageForSelf.Response>;
    getConvo(params?: ChatBskyConvoGetConvo.QueryParams, opts?: ChatBskyConvoGetConvo.CallOptions): Promise<ChatBskyConvoGetConvo.Response>;
    getConvoAvailability(params?: ChatBskyConvoGetConvoAvailability.QueryParams, opts?: ChatBskyConvoGetConvoAvailability.CallOptions): Promise<ChatBskyConvoGetConvoAvailability.Response>;
    getConvoForMembers(params?: ChatBskyConvoGetConvoForMembers.QueryParams, opts?: ChatBskyConvoGetConvoForMembers.CallOptions): Promise<ChatBskyConvoGetConvoForMembers.Response>;
    getLog(params?: ChatBskyConvoGetLog.QueryParams, opts?: ChatBskyConvoGetLog.CallOptions): Promise<ChatBskyConvoGetLog.Response>;
    getMessages(params?: ChatBskyConvoGetMessages.QueryParams, opts?: ChatBskyConvoGetMessages.CallOptions): Promise<ChatBskyConvoGetMessages.Response>;
    leaveConvo(data?: ChatBskyConvoLeaveConvo.InputSchema, opts?: ChatBskyConvoLeaveConvo.CallOptions): Promise<ChatBskyConvoLeaveConvo.Response>;
    listConvos(params?: ChatBskyConvoListConvos.QueryParams, opts?: ChatBskyConvoListConvos.CallOptions): Promise<ChatBskyConvoListConvos.Response>;
    muteConvo(data?: ChatBskyConvoMuteConvo.InputSchema, opts?: ChatBskyConvoMuteConvo.CallOptions): Promise<ChatBskyConvoMuteConvo.Response>;
    removeReaction(data?: ChatBskyConvoRemoveReaction.InputSchema, opts?: ChatBskyConvoRemoveReaction.CallOptions): Promise<ChatBskyConvoRemoveReaction.Response>;
    sendMessage(data?: ChatBskyConvoSendMessage.InputSchema, opts?: ChatBskyConvoSendMessage.CallOptions): Promise<ChatBskyConvoSendMessage.Response>;
    sendMessageBatch(data?: ChatBskyConvoSendMessageBatch.InputSchema, opts?: ChatBskyConvoSendMessageBatch.CallOptions): Promise<ChatBskyConvoSendMessageBatch.Response>;
    unmuteConvo(data?: ChatBskyConvoUnmuteConvo.InputSchema, opts?: ChatBskyConvoUnmuteConvo.CallOptions): Promise<ChatBskyConvoUnmuteConvo.Response>;
    updateAllRead(data?: ChatBskyConvoUpdateAllRead.InputSchema, opts?: ChatBskyConvoUpdateAllRead.CallOptions): Promise<ChatBskyConvoUpdateAllRead.Response>;
    updateRead(data?: ChatBskyConvoUpdateRead.InputSchema, opts?: ChatBskyConvoUpdateRead.CallOptions): Promise<ChatBskyConvoUpdateRead.Response>;
}
export declare class ChatBskyModerationNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    getActorMetadata(params?: ChatBskyModerationGetActorMetadata.QueryParams, opts?: ChatBskyModerationGetActorMetadata.CallOptions): Promise<ChatBskyModerationGetActorMetadata.Response>;
    getMessageContext(params?: ChatBskyModerationGetMessageContext.QueryParams, opts?: ChatBskyModerationGetMessageContext.CallOptions): Promise<ChatBskyModerationGetMessageContext.Response>;
    updateActorAccess(data?: ChatBskyModerationUpdateActorAccess.InputSchema, opts?: ChatBskyModerationUpdateActorAccess.CallOptions): Promise<ChatBskyModerationUpdateActorAccess.Response>;
}
export declare class ToolsNS {
    _client: XrpcClient;
    ozone: ToolsOzoneNS;
    constructor(client: XrpcClient);
}
export declare class ToolsOzoneNS {
    _client: XrpcClient;
    communication: ToolsOzoneCommunicationNS;
    hosting: ToolsOzoneHostingNS;
    moderation: ToolsOzoneModerationNS;
    safelink: ToolsOzoneSafelinkNS;
    server: ToolsOzoneServerNS;
    set: ToolsOzoneSetNS;
    setting: ToolsOzoneSettingNS;
    signature: ToolsOzoneSignatureNS;
    team: ToolsOzoneTeamNS;
    verification: ToolsOzoneVerificationNS;
    constructor(client: XrpcClient);
}
export declare class ToolsOzoneCommunicationNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    createTemplate(data?: ToolsOzoneCommunicationCreateTemplate.InputSchema, opts?: ToolsOzoneCommunicationCreateTemplate.CallOptions): Promise<ToolsOzoneCommunicationCreateTemplate.Response>;
    deleteTemplate(data?: ToolsOzoneCommunicationDeleteTemplate.InputSchema, opts?: ToolsOzoneCommunicationDeleteTemplate.CallOptions): Promise<ToolsOzoneCommunicationDeleteTemplate.Response>;
    listTemplates(params?: ToolsOzoneCommunicationListTemplates.QueryParams, opts?: ToolsOzoneCommunicationListTemplates.CallOptions): Promise<ToolsOzoneCommunicationListTemplates.Response>;
    updateTemplate(data?: ToolsOzoneCommunicationUpdateTemplate.InputSchema, opts?: ToolsOzoneCommunicationUpdateTemplate.CallOptions): Promise<ToolsOzoneCommunicationUpdateTemplate.Response>;
}
export declare class ToolsOzoneHostingNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    getAccountHistory(params?: ToolsOzoneHostingGetAccountHistory.QueryParams, opts?: ToolsOzoneHostingGetAccountHistory.CallOptions): Promise<ToolsOzoneHostingGetAccountHistory.Response>;
}
export declare class ToolsOzoneModerationNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    emitEvent(data?: ToolsOzoneModerationEmitEvent.InputSchema, opts?: ToolsOzoneModerationEmitEvent.CallOptions): Promise<ToolsOzoneModerationEmitEvent.Response>;
    getEvent(params?: ToolsOzoneModerationGetEvent.QueryParams, opts?: ToolsOzoneModerationGetEvent.CallOptions): Promise<ToolsOzoneModerationGetEvent.Response>;
    getRecord(params?: ToolsOzoneModerationGetRecord.QueryParams, opts?: ToolsOzoneModerationGetRecord.CallOptions): Promise<ToolsOzoneModerationGetRecord.Response>;
    getRecords(params?: ToolsOzoneModerationGetRecords.QueryParams, opts?: ToolsOzoneModerationGetRecords.CallOptions): Promise<ToolsOzoneModerationGetRecords.Response>;
    getRepo(params?: ToolsOzoneModerationGetRepo.QueryParams, opts?: ToolsOzoneModerationGetRepo.CallOptions): Promise<ToolsOzoneModerationGetRepo.Response>;
    getReporterStats(params?: ToolsOzoneModerationGetReporterStats.QueryParams, opts?: ToolsOzoneModerationGetReporterStats.CallOptions): Promise<ToolsOzoneModerationGetReporterStats.Response>;
    getRepos(params?: ToolsOzoneModerationGetRepos.QueryParams, opts?: ToolsOzoneModerationGetRepos.CallOptions): Promise<ToolsOzoneModerationGetRepos.Response>;
    getSubjects(params?: ToolsOzoneModerationGetSubjects.QueryParams, opts?: ToolsOzoneModerationGetSubjects.CallOptions): Promise<ToolsOzoneModerationGetSubjects.Response>;
    queryEvents(params?: ToolsOzoneModerationQueryEvents.QueryParams, opts?: ToolsOzoneModerationQueryEvents.CallOptions): Promise<ToolsOzoneModerationQueryEvents.Response>;
    queryStatuses(params?: ToolsOzoneModerationQueryStatuses.QueryParams, opts?: ToolsOzoneModerationQueryStatuses.CallOptions): Promise<ToolsOzoneModerationQueryStatuses.Response>;
    searchRepos(params?: ToolsOzoneModerationSearchRepos.QueryParams, opts?: ToolsOzoneModerationSearchRepos.CallOptions): Promise<ToolsOzoneModerationSearchRepos.Response>;
}
export declare class ToolsOzoneSafelinkNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    addRule(data?: ToolsOzoneSafelinkAddRule.InputSchema, opts?: ToolsOzoneSafelinkAddRule.CallOptions): Promise<ToolsOzoneSafelinkAddRule.Response>;
    queryEvents(data?: ToolsOzoneSafelinkQueryEvents.InputSchema, opts?: ToolsOzoneSafelinkQueryEvents.CallOptions): Promise<ToolsOzoneSafelinkQueryEvents.Response>;
    queryRules(data?: ToolsOzoneSafelinkQueryRules.InputSchema, opts?: ToolsOzoneSafelinkQueryRules.CallOptions): Promise<ToolsOzoneSafelinkQueryRules.Response>;
    removeRule(data?: ToolsOzoneSafelinkRemoveRule.InputSchema, opts?: ToolsOzoneSafelinkRemoveRule.CallOptions): Promise<ToolsOzoneSafelinkRemoveRule.Response>;
    updateRule(data?: ToolsOzoneSafelinkUpdateRule.InputSchema, opts?: ToolsOzoneSafelinkUpdateRule.CallOptions): Promise<ToolsOzoneSafelinkUpdateRule.Response>;
}
export declare class ToolsOzoneServerNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    getConfig(params?: ToolsOzoneServerGetConfig.QueryParams, opts?: ToolsOzoneServerGetConfig.CallOptions): Promise<ToolsOzoneServerGetConfig.Response>;
}
export declare class ToolsOzoneSetNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    addValues(data?: ToolsOzoneSetAddValues.InputSchema, opts?: ToolsOzoneSetAddValues.CallOptions): Promise<ToolsOzoneSetAddValues.Response>;
    deleteSet(data?: ToolsOzoneSetDeleteSet.InputSchema, opts?: ToolsOzoneSetDeleteSet.CallOptions): Promise<ToolsOzoneSetDeleteSet.Response>;
    deleteValues(data?: ToolsOzoneSetDeleteValues.InputSchema, opts?: ToolsOzoneSetDeleteValues.CallOptions): Promise<ToolsOzoneSetDeleteValues.Response>;
    getValues(params?: ToolsOzoneSetGetValues.QueryParams, opts?: ToolsOzoneSetGetValues.CallOptions): Promise<ToolsOzoneSetGetValues.Response>;
    querySets(params?: ToolsOzoneSetQuerySets.QueryParams, opts?: ToolsOzoneSetQuerySets.CallOptions): Promise<ToolsOzoneSetQuerySets.Response>;
    upsertSet(data?: ToolsOzoneSetUpsertSet.InputSchema, opts?: ToolsOzoneSetUpsertSet.CallOptions): Promise<ToolsOzoneSetUpsertSet.Response>;
}
export declare class ToolsOzoneSettingNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    listOptions(params?: ToolsOzoneSettingListOptions.QueryParams, opts?: ToolsOzoneSettingListOptions.CallOptions): Promise<ToolsOzoneSettingListOptions.Response>;
    removeOptions(data?: ToolsOzoneSettingRemoveOptions.InputSchema, opts?: ToolsOzoneSettingRemoveOptions.CallOptions): Promise<ToolsOzoneSettingRemoveOptions.Response>;
    upsertOption(data?: ToolsOzoneSettingUpsertOption.InputSchema, opts?: ToolsOzoneSettingUpsertOption.CallOptions): Promise<ToolsOzoneSettingUpsertOption.Response>;
}
export declare class ToolsOzoneSignatureNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    findCorrelation(params?: ToolsOzoneSignatureFindCorrelation.QueryParams, opts?: ToolsOzoneSignatureFindCorrelation.CallOptions): Promise<ToolsOzoneSignatureFindCorrelation.Response>;
    findRelatedAccounts(params?: ToolsOzoneSignatureFindRelatedAccounts.QueryParams, opts?: ToolsOzoneSignatureFindRelatedAccounts.CallOptions): Promise<ToolsOzoneSignatureFindRelatedAccounts.Response>;
    searchAccounts(params?: ToolsOzoneSignatureSearchAccounts.QueryParams, opts?: ToolsOzoneSignatureSearchAccounts.CallOptions): Promise<ToolsOzoneSignatureSearchAccounts.Response>;
}
export declare class ToolsOzoneTeamNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    addMember(data?: ToolsOzoneTeamAddMember.InputSchema, opts?: ToolsOzoneTeamAddMember.CallOptions): Promise<ToolsOzoneTeamAddMember.Response>;
    deleteMember(data?: ToolsOzoneTeamDeleteMember.InputSchema, opts?: ToolsOzoneTeamDeleteMember.CallOptions): Promise<ToolsOzoneTeamDeleteMember.Response>;
    listMembers(params?: ToolsOzoneTeamListMembers.QueryParams, opts?: ToolsOzoneTeamListMembers.CallOptions): Promise<ToolsOzoneTeamListMembers.Response>;
    updateMember(data?: ToolsOzoneTeamUpdateMember.InputSchema, opts?: ToolsOzoneTeamUpdateMember.CallOptions): Promise<ToolsOzoneTeamUpdateMember.Response>;
}
export declare class ToolsOzoneVerificationNS {
    _client: XrpcClient;
    constructor(client: XrpcClient);
    grantVerifications(data?: ToolsOzoneVerificationGrantVerifications.InputSchema, opts?: ToolsOzoneVerificationGrantVerifications.CallOptions): Promise<ToolsOzoneVerificationGrantVerifications.Response>;
    listVerifications(params?: ToolsOzoneVerificationListVerifications.QueryParams, opts?: ToolsOzoneVerificationListVerifications.CallOptions): Promise<ToolsOzoneVerificationListVerifications.Response>;
    revokeVerifications(data?: ToolsOzoneVerificationRevokeVerifications.InputSchema, opts?: ToolsOzoneVerificationRevokeVerifications.CallOptions): Promise<ToolsOzoneVerificationRevokeVerifications.Response>;
}
//# sourceMappingURL=index.d.ts.map