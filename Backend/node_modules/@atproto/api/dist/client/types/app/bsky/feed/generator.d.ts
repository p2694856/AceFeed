/**
 * GENERATED CODE - DO NOT MODIFY
 */
import { type ValidationResult, BlobRef } from '@atproto/lexicon';
import { type $Typed } from '@atproto/api/dist/client/util';
import type * as AppBskyRichtextFacet from '@atproto/api/dist/client/types/app/bsky/richtext/facet';
import type * as ComAtprotoLabelDefs from '@atproto/api/dist/client/types/com/atproto/label/defs';
export interface Record {
    $type: 'app.bsky.feed.generator';
    did: string;
    displayName: string;
    description?: string;
    descriptionFacets?: AppBskyRichtextFacet.Main[];
    avatar?: BlobRef;
    /** Declaration that a feed accepts feedback interactions from a client through app.bsky.feed.sendInteractions */
    acceptsInteractions?: boolean;
    labels?: $Typed<ComAtprotoLabelDefs.SelfLabels> | {
        $type: string;
    };
    contentMode?: 'app.bsky.feed.defs#contentModeUnspecified' | 'app.bsky.feed.defs#contentModeVideo' | (string & {});
    createdAt: string;
    [k: string]: unknown;
}
export declare function isRecord<V>(v: V): v is import("@atproto/api/dist/client/util").$TypedObject<V, "app.bsky.feed.generator", "main">;
export declare function validateRecord<V>(v: V): ValidationResult<Record & V>;
//# sourceMappingURL=generator.d.ts.map